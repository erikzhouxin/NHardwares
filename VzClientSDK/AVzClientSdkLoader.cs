using System.Runtime.InteropServices;
using System.Data.NHInterfaces;
using System.IO;

namespace System.Data.VzClientSDK
{
    internal class VzClientSdkLoader : ASdkDynamicLoader, IVzClientSdkProxy
    {
        #region // 委托定义
        private DCreater.VzLPRClient_CancelOfflineCheck _VzLPRClient_CancelOfflineCheck;
        private DCreater.VzLPRClient_ChangeEncryptKey _VzLPRClient_ChangeEncryptKey;
        private DCreater.VzLPRClient_Cleanup _VzLPRClient_Cleanup;
        private DCreater.VzLPRClient_Close _VzLPRClient_Close;
        private DCreater.VzLPRClient_CloseByIP _VzLPRClient_CloseByIP;
        private DCreater.VzLPRClient_ForceTrigger _VzLPRClient_ForceTrigger;
        private DCreater.VzLPRClient_GetAlgResultParam _VzLPRClient_GetAlgResultParam;
        private DCreater.VzLPRClient_GetCameraConfig _VzLPRClient_GetCameraConfig;
        private DCreater.VzLPRClient_GetCenterServerDeviceReg _VzLPRClient_GetCenterServerDeviceReg;
        private DCreater.VzLPRClient_GetCenterServerGionin _VzLPRClient_GetCenterServerGionin;
        private DCreater.VzLPRClient_GetCenterServerHostBak _VzLPRClient_GetCenterServerHostBak;
        private DCreater.VzLPRClient_GetCenterServerNet _VzLPRClient_GetCenterServerNet;
        private DCreater.VzLPRClient_GetCenterServerPlate _VzLPRClient_GetCenterServerPlate;
        private DCreater.VzLPRClient_GetCenterServerSerial _VzLPRClient_GetCenterServerSerial;
        private DCreater.VzLPRClient_GetDenoise _VzLPRClient_GetDenoise;
        private DCreater.VzLPRClient_GetDeviceIP _VzLPRClient_GetDeviceIP;
        private DCreater.VzLPRClient_GetDrawMode _VzLPRClient_GetDrawMode;
        private DCreater.VzLPRClient_GetEMS _VzLPRClient_GetEMS;
        private DCreater.VzLPRClient_GetFlip _VzLPRClient_GetFlip;
        private DCreater.VzLPRClient_GetFrequency _VzLPRClient_GetFrequency;
        private DCreater.VzLPRClient_GetGPIOValue _VzLPRClient_GetGPIOValue;
        private DCreater.VzLPRClient_GetHwBoardType _VzLPRClient_GetHwBoardType;
        private DCreater.VzLPRClient_GetHwBoardVersion _VzLPRClient_GetHwBoardVersion;
        private DCreater.VzLPRClient_GetIOOutput _VzLPRClient_GetIOOutput;
        private DCreater.VzLPRClient_GetJpegStreamFromRealPlayDec _VzLPRClient_GetJpegStreamFromRealPlayDec;
        private DCreater.VzLPRClient_GetLEDLightStatus _VzLPRClient_GetLEDLightStatus;
        private DCreater.VzLPRClient_GetOsdParam _VzLPRClient_GetOsdParam;
        private DCreater.VzLPRClient_GetOutputConfig _VzLPRClient_GetOutputConfig;
        private DCreater.VzLPRClient_GetPlateRecType _VzLPRClient_GetPlateRecType;
        private DCreater.VzLPRClient_GetPlateTrigType _VzLPRClient_GetPlateTrigType;
        private DCreater.VzLPRClient_GetRegionOfInterestEx _VzLPRClient_GetRegionOfInterestEx;
        private DCreater.VzLPRClient_GetSerialNo _VzLPRClient_GetSerialNo;
        private DCreater.VzLPRClient_GetSerialNumber _VzLPRClient_GetSerialNumber;
        private DCreater.VzLPRClient_GetSerialParameter _VzLPRClient_GetSerialParameter;
        private DCreater.VzLPRClient_GetShutter _VzLPRClient_GetShutter;
        private DCreater.VzLPRClient_GetSnapShootToJpeg2 _VzLPRClient_GetSnapShootToJpeg2;
        private DCreater.VzLPRClient_SaveSnapImageToJpeg _VzLPRClient_SaveSnapImageToJpeg;
        private DCreater.VzLPRClient_GetSupportedProvinces _VzLPRClient_GetSupportedProvinces;
        private DCreater.VzLPRClient_GetTriggerDelay _VzLPRClient_GetTriggerDelay;
        private DCreater.VzLPRClient_GetVideoCBR _VzLPRClient_GetVideoCBR;
        private DCreater.VzLPRClient_GetVideoCompressMode _VzLPRClient_GetVideoCompressMode;
        private DCreater.VzLPRClient_GetVideoEncodeType _VzLPRClient_GetVideoEncodeType;
        private DCreater.VzLPRClient_GetVideoFrameRate _VzLPRClient_GetVideoFrameRate;
        private DCreater.VzLPRClient_GetVideoFrameSizeIndex _VzLPRClient_GetVideoFrameSizeIndex;
        private DCreater.VzLPRClient_GetVideoFrameSizeIndexEx _VzLPRClient_GetVideoFrameSizeIndexEx;
        private DCreater.VzLPRClient_GetVideoPara _VzLPRClient_GetVideoPara;
        private DCreater.VzLPRClient_GetVideoVBR _VzLPRClient_GetVideoVBR;
        private DCreater.VzLPRClient_GetVirtualLoop _VzLPRClient_GetVirtualLoop;
        private DCreater.VzLPRClient_GetWLCheckMethod _VzLPRClient_GetWLCheckMethod;
        private DCreater.VzLPRClient_GetWLFuzzy _VzLPRClient_GetWLFuzzy;
        private DCreater.VzLPRClient_ImageEncodeToJpeg _VzLPRClient_ImageEncodeToJpeg;
        private DCreater.VzLPRClient_ImageSaveToJpeg _VzLPRClient_ImageSaveToJpeg;
        private DCreater.VzLPRClient_ImageSaveToJpegEx _VzLPRClient_ImageSaveToJpegEx;
        private DCreater.VzLPRClient_IsConnected _VzLPRClient_IsConnected;
        private DCreater.VzLPRClient_LoadImageById _VzLPRClient_LoadImageById;
        private DCreater.VzLPRClient_Open _VzLPRClient_Open;
        private DCreater.VzLPRClient_OpenV2 _VzLPRClient_OpenV2;
        private DCreater.VzLPRClient_PlayVoice _VzLPRClient_PlayVoice;
        private DCreater.VzLPRClient_PresetProvinceIndex _VzLPRClient_PresetProvinceIndex;
        private DCreater.VzLPRClient_QueryCountByTimeAndPlate _VzLPRClient_QueryCountByTimeAndPlate;
        private DCreater.VzLPRClient_QueryPageRecordByTimeAndPlate _VzLPRClient_QueryPageRecordByTimeAndPlate;
        private DCreater.VzLPRClient_QueryRecordByTimeAndPlate _VzLPRClient_QueryRecordByTimeAndPlate;
        private DCreater.VzLPRClient_ReadUserData _VzLPRClient_ReadUserData;
        private DCreater.VzLPRClient_ResetEncryptKey _VzLPRClient_ResetEncryptKey;
        private DCreater.VzLPRClient_RGet_Encode_Param _VzLPRClient_RGet_Encode_Param;
        private DCreater.VzLPRClient_RGet_Encode_Param_Property _VzLPRClient_RGet_Encode_Param_Property;
        private DCreater.VzLPRClient_RGet_Video_Param _VzLPRClient_RGet_Video_Param;
        private DCreater.VzLPRClient_RSet_Encode_Param _VzLPRClient_RSet_Encode_Param;
        private DCreater.VzLPRClient_RSet_Video_Param _VzLPRClient_RSet_Video_Param;
        private DCreater.VzLPRClient_SaveRealData _VzLPRClient_SaveRealData;
        private DCreater.VzLPRClient_SerialSend _VzLPRClient_SerialSend;
        private DCreater.VzLPRClient_SerialStart _VzLPRClient_SerialStart;
        private DCreater.VzLPRClient_SerialStop _VzLPRClient_SerialStop;
        private DCreater.VzLPRClient_SetAlgResultParam _VzLPRClient_SetAlgResultParam;
        private DCreater.VzLPRClient_SetCenterServerDeviceReg _VzLPRClient_SetCenterServerDeviceReg;
        private DCreater.VzLPRClient_SetCenterServerGionin _VzLPRClient_SetCenterServerGionin;
        private DCreater.VzLPRClient_SetCenterServerHostBak _VzLPRClient_SetCenterServerHostBak;
        private DCreater.VzLPRClient_SetCenterServerNet _VzLPRClient_SetCenterServerNet;
        private DCreater.VzLPRClient_SetCenterServerPlate _VzLPRClient_SetCenterServerPlate;
        private DCreater.VzLPRClient_SetCenterServerSerial _VzLPRClient_SetCenterServerSerial;
        private DCreater.VZLPRClient_SetCommonNotifyCallBack _VZLPRClient_SetCommonNotifyCallBack;
        private DCreater.VzLPRClient_SetDateTime _VzLPRClient_SetDateTime;
        private DCreater.VzLPRClient_SetDenoise _VzLPRClient_SetDenoise;
        private DCreater.VzLPRClient_SetDrawMode _VzLPRClient_SetDrawMode;
        private DCreater.VzLPRClient_SetEncrypt _VzLPRClient_SetEncrypt;
        private DCreater.VzLPRClient_SetFlip _VzLPRClient_SetFlip;
        private DCreater.VzLPRClient_SetFrequency _VzLPRClient_SetFrequency;
        private DCreater.VzLPRClient_SetGPIORecvCallBack _VzLPRClient_SetGPIORecvCallBack;
        private DCreater.VzLPRClient_SetIOOutput _VzLPRClient_SetIOOutput;
        private DCreater.VzLPRClient_SetIOOutputAuto _VzLPRClient_SetIOOutputAuto;
        private DCreater.VzLPRClient_SetIsOutputRealTimeResult _VzLPRClient_SetIsOutputRealTimeResult;
        private DCreater.VzLPRClient_SetIsShowPlateRect _VzLPRClient_SetIsShowPlateRect;
        private DCreater.VzLPRClient_SetLEDLightControlMode _VzLPRClient_SetLEDLightControlMode;
        private DCreater.VzLPRClient_SetLEDLightLevel _VzLPRClient_SetLEDLightLevel;
        private DCreater.VzLPRClient_SetOfflineCheck _VzLPRClient_SetOfflineCheck;
        private DCreater.VzLPRClient_SetOsdParam _VzLPRClient_SetOsdParam;
        private DCreater.VzLPRClient_SetOutputConfig _VzLPRClient_SetOutputConfig;
        private DCreater.VzLPRClient_SetPlateInfoCallBack _VzLPRClient_SetPlateInfoCallBack;
        private DCreater.VzLPRClient_SetPlateRecType _VzLPRClient_SetPlateRecType;
        private DCreater.VzLPRClient_SetPlateTrigType _VzLPRClient_SetPlateTrigType;
        private DCreater.VzLPRClient_SetQueryPlateCallBack _VzLPRClient_SetQueryPlateCallBack;
        private DCreater.VzLPRClient_SetRequestTalkCallBack _VzLPRClient_SetRequestTalkCallBack;
        private DCreater.VzLPRClient_SetSerialParameter _VzLPRClient_SetSerialParameter;
        private DCreater.VzLPRClient_SetShutter _VzLPRClient_SetShutter;
        private DCreater.VzLPRClient_SetTriggerDelay _VzLPRClient_SetTriggerDelay;
        private DCreater.VzLPRClient_Setup _VzLPRClient_Setup;
        private DCreater.VzLPRClient_SetVideoCBR _VzLPRClient_SetVideoCBR;
        private DCreater.VzLPRClient_SetVideoCompressMode _VzLPRClient_SetVideoCompressMode;
        private DCreater.VzLPRClient_SetVideoEncodeType _VzLPRClient_SetVideoEncodeType;
        private DCreater.VzLPRClient_SetVideoFrameCallBack _VzLPRClient_SetVideoFrameCallBack;
        private DCreater.VzLPRClient_SetVideoFrameRate _VzLPRClient_SetVideoFrameRate;
        private DCreater.VzLPRClient_SetVideoFrameSizeIndex _VzLPRClient_SetVideoFrameSizeIndex;
        private DCreater.VzLPRClient_SetVideoFrameSizeIndexEx _VzLPRClient_SetVideoFrameSizeIndexEx;
        private DCreater.VzLPRClient_SetVideoPara _VzLPRClient_SetVideoPara;
        private DCreater.VzLPRClient_SetVideoVBR _VzLPRClient_SetVideoVBR;
        private DCreater.VzLPRClient_SetVirtualLoop _VzLPRClient_SetVirtualLoop;
        private DCreater.VzLPRClient_SetWLCheckMethod _VzLPRClient_SetWLCheckMethod;
        private DCreater.VzLPRClient_SetWLFuzzy _VzLPRClient_SetWLFuzzy;
        private DCreater.VZLPRClient_StartFindDeviceEx _VZLPRClient_StartFindDeviceEx;
        private DCreater.VzLPRClient_StartRealPlay _VzLPRClient_StartRealPlay;
        private DCreater.VzLPRClient_StartRealPlayDecData _VzLPRClient_StartRealPlayDecData;
        private DCreater.VzLPRClient_StartRealPlayFrameCallBack _VzLPRClient_StartRealPlayFrameCallBack;
        private DCreater.VzLPRClient_StartRecordAudio _VzLPRClient_StartRecordAudio;
        private DCreater.VzLPRClient_StartTalk _VzLPRClient_StartTalk;
        private DCreater.VZLPRClient_StopFindDevice _VZLPRClient_StopFindDevice;
        private DCreater.VzLPRClient_StopRealPlay _VzLPRClient_StopRealPlay;
        private DCreater.VzLPRClient_StopRealPlayDecData _VzLPRClient_StopRealPlayDecData;
        private DCreater.VzLPRClient_StopRecordAudio _VzLPRClient_StopRecordAudio;
        private DCreater.VzLPRClient_StopSaveRealData _VzLPRClient_StopSaveRealData;
        private DCreater.VzLPRClient_StopTalk _VzLPRClient_StopTalk;
        private DCreater.VzLPRClient_UpdateNetworkParam _VzLPRClient_UpdateNetworkParam;
        private DCreater.VzLPRClient_WhiteListClearCustomersAndVehicles _VzLPRClient_WhiteListClearCustomersAndVehicles;
        private DCreater.VzLPRClient_WhiteListDeleteVehicle _VzLPRClient_WhiteListDeleteVehicle;
        private DCreater.VzLPRClient_WhiteListGetRowCount _VzLPRClient_WhiteListGetRowCount;
        private DCreater.VzLPRClient_WhiteListGetVehicleCount _VzLPRClient_WhiteListGetVehicleCount;
        private DCreater.VzLPRClient_WhiteListImportRows _VzLPRClient_WhiteListImportRows;
        private DCreater.VzLPRClient_WhiteListLoadVehicle _VzLPRClient_WhiteListLoadVehicle;
        private DCreater.VzLPRClient_WhiteListSetQueryCallBack _VzLPRClient_WhiteListSetQueryCallBack;
        private DCreater.VzLPRClient_WhiteListUpdateVehicleByID _VzLPRClient_WhiteListUpdateVehicleByID;
        private DCreater.VzLPRClient_WriteUserData _VzLPRClient_WriteUserData;
        #endregion 委托定义
        public VzClientSdkLoader()
        {
            _VzLPRClient_CancelOfflineCheck = GetDelegate<DCreater.VzLPRClient_CancelOfflineCheck>(nameof(DCreater.VzLPRClient_CancelOfflineCheck));
            _VzLPRClient_ChangeEncryptKey = GetDelegate<DCreater.VzLPRClient_ChangeEncryptKey>(nameof(DCreater.VzLPRClient_ChangeEncryptKey));
            _VzLPRClient_Cleanup = GetDelegate<DCreater.VzLPRClient_Cleanup>(nameof(DCreater.VzLPRClient_Cleanup));
            _VzLPRClient_Close = GetDelegate<DCreater.VzLPRClient_Close>(nameof(DCreater.VzLPRClient_Close));
            _VzLPRClient_CloseByIP = GetDelegate<DCreater.VzLPRClient_CloseByIP>(nameof(DCreater.VzLPRClient_CloseByIP));
            _VzLPRClient_ForceTrigger = GetDelegate<DCreater.VzLPRClient_ForceTrigger>(nameof(DCreater.VzLPRClient_ForceTrigger));
            _VzLPRClient_GetAlgResultParam = GetDelegate<DCreater.VzLPRClient_GetAlgResultParam>(nameof(DCreater.VzLPRClient_GetAlgResultParam));
            _VzLPRClient_GetCameraConfig = GetDelegate<DCreater.VzLPRClient_GetCameraConfig>(nameof(DCreater.VzLPRClient_GetCameraConfig));
            _VzLPRClient_GetCenterServerDeviceReg = GetDelegate<DCreater.VzLPRClient_GetCenterServerDeviceReg>(nameof(DCreater.VzLPRClient_GetCenterServerDeviceReg));
            _VzLPRClient_GetCenterServerGionin = GetDelegate<DCreater.VzLPRClient_GetCenterServerGionin>(nameof(DCreater.VzLPRClient_GetCenterServerGionin));
            _VzLPRClient_GetCenterServerHostBak = GetDelegate<DCreater.VzLPRClient_GetCenterServerHostBak>(nameof(DCreater.VzLPRClient_GetCenterServerHostBak));
            _VzLPRClient_GetCenterServerNet = GetDelegate<DCreater.VzLPRClient_GetCenterServerNet>(nameof(DCreater.VzLPRClient_GetCenterServerNet));
            _VzLPRClient_GetCenterServerPlate = GetDelegate<DCreater.VzLPRClient_GetCenterServerPlate>(nameof(DCreater.VzLPRClient_GetCenterServerPlate));
            _VzLPRClient_GetCenterServerSerial = GetDelegate<DCreater.VzLPRClient_GetCenterServerSerial>(nameof(DCreater.VzLPRClient_GetCenterServerSerial));
            _VzLPRClient_GetDenoise = GetDelegate<DCreater.VzLPRClient_GetDenoise>(nameof(DCreater.VzLPRClient_GetDenoise));
            _VzLPRClient_GetDeviceIP = GetDelegate<DCreater.VzLPRClient_GetDeviceIP>(nameof(DCreater.VzLPRClient_GetDeviceIP));
            _VzLPRClient_GetDrawMode = GetDelegate<DCreater.VzLPRClient_GetDrawMode>(nameof(DCreater.VzLPRClient_GetDrawMode));
            _VzLPRClient_GetEMS = GetDelegate<DCreater.VzLPRClient_GetEMS>(nameof(DCreater.VzLPRClient_GetEMS));
            _VzLPRClient_GetFlip = GetDelegate<DCreater.VzLPRClient_GetFlip>(nameof(DCreater.VzLPRClient_GetFlip));
            _VzLPRClient_GetFrequency = GetDelegate<DCreater.VzLPRClient_GetFrequency>(nameof(DCreater.VzLPRClient_GetFrequency));
            _VzLPRClient_GetGPIOValue = GetDelegate<DCreater.VzLPRClient_GetGPIOValue>(nameof(DCreater.VzLPRClient_GetGPIOValue));
            _VzLPRClient_GetHwBoardType = GetDelegate<DCreater.VzLPRClient_GetHwBoardType>(nameof(DCreater.VzLPRClient_GetHwBoardType));
            _VzLPRClient_GetHwBoardVersion = GetDelegate<DCreater.VzLPRClient_GetHwBoardVersion>(nameof(DCreater.VzLPRClient_GetHwBoardVersion));
            _VzLPRClient_GetIOOutput = GetDelegate<DCreater.VzLPRClient_GetIOOutput>(nameof(DCreater.VzLPRClient_GetIOOutput));
            _VzLPRClient_GetJpegStreamFromRealPlayDec = GetDelegate<DCreater.VzLPRClient_GetJpegStreamFromRealPlayDec>(nameof(DCreater.VzLPRClient_GetJpegStreamFromRealPlayDec));
            _VzLPRClient_GetLEDLightStatus = GetDelegate<DCreater.VzLPRClient_GetLEDLightStatus>(nameof(DCreater.VzLPRClient_GetLEDLightStatus));
            _VzLPRClient_GetOsdParam = GetDelegate<DCreater.VzLPRClient_GetOsdParam>(nameof(DCreater.VzLPRClient_GetOsdParam));
            _VzLPRClient_GetOutputConfig = GetDelegate<DCreater.VzLPRClient_GetOutputConfig>(nameof(DCreater.VzLPRClient_GetOutputConfig));
            _VzLPRClient_GetPlateRecType = GetDelegate<DCreater.VzLPRClient_GetPlateRecType>(nameof(DCreater.VzLPRClient_GetPlateRecType));
            _VzLPRClient_GetPlateTrigType = GetDelegate<DCreater.VzLPRClient_GetPlateTrigType>(nameof(DCreater.VzLPRClient_GetPlateTrigType));
            _VzLPRClient_GetRegionOfInterestEx = GetDelegate<DCreater.VzLPRClient_GetRegionOfInterestEx>(nameof(DCreater.VzLPRClient_GetRegionOfInterestEx));
            _VzLPRClient_GetSerialNo = GetDelegate<DCreater.VzLPRClient_GetSerialNo>(nameof(DCreater.VzLPRClient_GetSerialNo));
            _VzLPRClient_GetSerialNumber = GetDelegate<DCreater.VzLPRClient_GetSerialNumber>(nameof(DCreater.VzLPRClient_GetSerialNumber));
            _VzLPRClient_GetSerialParameter = GetDelegate<DCreater.VzLPRClient_GetSerialParameter>(nameof(DCreater.VzLPRClient_GetSerialParameter));
            _VzLPRClient_GetShutter = GetDelegate<DCreater.VzLPRClient_GetShutter>(nameof(DCreater.VzLPRClient_GetShutter));
            _VzLPRClient_GetSnapShootToJpeg2 = GetDelegate<DCreater.VzLPRClient_GetSnapShootToJpeg2>(nameof(DCreater.VzLPRClient_GetSnapShootToJpeg2));
            _VzLPRClient_SaveSnapImageToJpeg = GetDelegate<DCreater.VzLPRClient_SaveSnapImageToJpeg>(nameof(DCreater.VzLPRClient_SaveSnapImageToJpeg));
            _VzLPRClient_GetSupportedProvinces = GetDelegate<DCreater.VzLPRClient_GetSupportedProvinces>(nameof(DCreater.VzLPRClient_GetSupportedProvinces));
            _VzLPRClient_GetTriggerDelay = GetDelegate<DCreater.VzLPRClient_GetTriggerDelay>(nameof(DCreater.VzLPRClient_GetTriggerDelay));
            _VzLPRClient_GetVideoCBR = GetDelegate<DCreater.VzLPRClient_GetVideoCBR>(nameof(DCreater.VzLPRClient_GetVideoCBR));
            _VzLPRClient_GetVideoCompressMode = GetDelegate<DCreater.VzLPRClient_GetVideoCompressMode>(nameof(DCreater.VzLPRClient_GetVideoCompressMode));
            _VzLPRClient_GetVideoEncodeType = GetDelegate<DCreater.VzLPRClient_GetVideoEncodeType>(nameof(DCreater.VzLPRClient_GetVideoEncodeType));
            _VzLPRClient_GetVideoFrameRate = GetDelegate<DCreater.VzLPRClient_GetVideoFrameRate>(nameof(DCreater.VzLPRClient_GetVideoFrameRate));
            _VzLPRClient_GetVideoFrameSizeIndex = GetDelegate<DCreater.VzLPRClient_GetVideoFrameSizeIndex>(nameof(DCreater.VzLPRClient_GetVideoFrameSizeIndex));
            _VzLPRClient_GetVideoFrameSizeIndexEx = GetDelegate<DCreater.VzLPRClient_GetVideoFrameSizeIndexEx>(nameof(DCreater.VzLPRClient_GetVideoFrameSizeIndexEx));
            _VzLPRClient_GetVideoPara = GetDelegate<DCreater.VzLPRClient_GetVideoPara>(nameof(DCreater.VzLPRClient_GetVideoPara));
            _VzLPRClient_GetVideoVBR = GetDelegate<DCreater.VzLPRClient_GetVideoVBR>(nameof(DCreater.VzLPRClient_GetVideoVBR));
            _VzLPRClient_GetVirtualLoop = GetDelegate<DCreater.VzLPRClient_GetVirtualLoop>(nameof(DCreater.VzLPRClient_GetVirtualLoop));
            _VzLPRClient_GetWLCheckMethod = GetDelegate<DCreater.VzLPRClient_GetWLCheckMethod>(nameof(DCreater.VzLPRClient_GetWLCheckMethod));
            _VzLPRClient_GetWLFuzzy = GetDelegate<DCreater.VzLPRClient_GetWLFuzzy>(nameof(DCreater.VzLPRClient_GetWLFuzzy));
            _VzLPRClient_ImageEncodeToJpeg = GetDelegate<DCreater.VzLPRClient_ImageEncodeToJpeg>(nameof(DCreater.VzLPRClient_ImageEncodeToJpeg));
            _VzLPRClient_ImageSaveToJpeg = GetDelegate<DCreater.VzLPRClient_ImageSaveToJpeg>(nameof(DCreater.VzLPRClient_ImageSaveToJpeg));
            _VzLPRClient_ImageSaveToJpegEx = GetDelegate<DCreater.VzLPRClient_ImageSaveToJpegEx>(nameof(DCreater.VzLPRClient_ImageSaveToJpegEx));
            _VzLPRClient_IsConnected = GetDelegate<DCreater.VzLPRClient_IsConnected>(nameof(DCreater.VzLPRClient_IsConnected));
            _VzLPRClient_LoadImageById = GetDelegate<DCreater.VzLPRClient_LoadImageById>(nameof(DCreater.VzLPRClient_LoadImageById));
            _VzLPRClient_Open = GetDelegate<DCreater.VzLPRClient_Open>(nameof(DCreater.VzLPRClient_Open));
            _VzLPRClient_OpenV2 = GetDelegate<DCreater.VzLPRClient_OpenV2>(nameof(DCreater.VzLPRClient_OpenV2));
            _VzLPRClient_PlayVoice = GetDelegate<DCreater.VzLPRClient_PlayVoice>(nameof(DCreater.VzLPRClient_PlayVoice));
            _VzLPRClient_PresetProvinceIndex = GetDelegate<DCreater.VzLPRClient_PresetProvinceIndex>(nameof(DCreater.VzLPRClient_PresetProvinceIndex));
            _VzLPRClient_QueryCountByTimeAndPlate = GetDelegate<DCreater.VzLPRClient_QueryCountByTimeAndPlate>(nameof(DCreater.VzLPRClient_QueryCountByTimeAndPlate));
            _VzLPRClient_QueryPageRecordByTimeAndPlate = GetDelegate<DCreater.VzLPRClient_QueryPageRecordByTimeAndPlate>(nameof(DCreater.VzLPRClient_QueryPageRecordByTimeAndPlate));
            _VzLPRClient_QueryRecordByTimeAndPlate = GetDelegate<DCreater.VzLPRClient_QueryRecordByTimeAndPlate>(nameof(DCreater.VzLPRClient_QueryRecordByTimeAndPlate));
            _VzLPRClient_ReadUserData = GetDelegate<DCreater.VzLPRClient_ReadUserData>(nameof(DCreater.VzLPRClient_ReadUserData));
            _VzLPRClient_ResetEncryptKey = GetDelegate<DCreater.VzLPRClient_ResetEncryptKey>(nameof(DCreater.VzLPRClient_ResetEncryptKey));
            _VzLPRClient_RGet_Encode_Param = GetDelegate<DCreater.VzLPRClient_RGet_Encode_Param>(nameof(DCreater.VzLPRClient_RGet_Encode_Param));
            _VzLPRClient_RGet_Encode_Param_Property = GetDelegate<DCreater.VzLPRClient_RGet_Encode_Param_Property>(nameof(DCreater.VzLPRClient_RGet_Encode_Param_Property));
            _VzLPRClient_RGet_Video_Param = GetDelegate<DCreater.VzLPRClient_RGet_Video_Param>(nameof(DCreater.VzLPRClient_RGet_Video_Param));
            _VzLPRClient_RSet_Encode_Param = GetDelegate<DCreater.VzLPRClient_RSet_Encode_Param>(nameof(DCreater.VzLPRClient_RSet_Encode_Param));
            _VzLPRClient_RSet_Video_Param = GetDelegate<DCreater.VzLPRClient_RSet_Video_Param>(nameof(DCreater.VzLPRClient_RSet_Video_Param));
            _VzLPRClient_SaveRealData = GetDelegate<DCreater.VzLPRClient_SaveRealData>(nameof(DCreater.VzLPRClient_SaveRealData));
            _VzLPRClient_SerialSend = GetDelegate<DCreater.VzLPRClient_SerialSend>(nameof(DCreater.VzLPRClient_SerialSend));
            _VzLPRClient_SerialStart = GetDelegate<DCreater.VzLPRClient_SerialStart>(nameof(DCreater.VzLPRClient_SerialStart));
            _VzLPRClient_SerialStop = GetDelegate<DCreater.VzLPRClient_SerialStop>(nameof(DCreater.VzLPRClient_SerialStop));
            _VzLPRClient_SetAlgResultParam = GetDelegate<DCreater.VzLPRClient_SetAlgResultParam>(nameof(DCreater.VzLPRClient_SetAlgResultParam));
            _VzLPRClient_SetCenterServerDeviceReg = GetDelegate<DCreater.VzLPRClient_SetCenterServerDeviceReg>(nameof(DCreater.VzLPRClient_SetCenterServerDeviceReg));
            _VzLPRClient_SetCenterServerGionin = GetDelegate<DCreater.VzLPRClient_SetCenterServerGionin>(nameof(DCreater.VzLPRClient_SetCenterServerGionin));
            _VzLPRClient_SetCenterServerHostBak = GetDelegate<DCreater.VzLPRClient_SetCenterServerHostBak>(nameof(DCreater.VzLPRClient_SetCenterServerHostBak));
            _VzLPRClient_SetCenterServerNet = GetDelegate<DCreater.VzLPRClient_SetCenterServerNet>(nameof(DCreater.VzLPRClient_SetCenterServerNet));
            _VzLPRClient_SetCenterServerPlate = GetDelegate<DCreater.VzLPRClient_SetCenterServerPlate>(nameof(DCreater.VzLPRClient_SetCenterServerPlate));
            _VzLPRClient_SetCenterServerSerial = GetDelegate<DCreater.VzLPRClient_SetCenterServerSerial>(nameof(DCreater.VzLPRClient_SetCenterServerSerial));
            _VZLPRClient_SetCommonNotifyCallBack = GetDelegate<DCreater.VZLPRClient_SetCommonNotifyCallBack>(nameof(DCreater.VZLPRClient_SetCommonNotifyCallBack));
            _VzLPRClient_SetDateTime = GetDelegate<DCreater.VzLPRClient_SetDateTime>(nameof(DCreater.VzLPRClient_SetDateTime));
            _VzLPRClient_SetDenoise = GetDelegate<DCreater.VzLPRClient_SetDenoise>(nameof(DCreater.VzLPRClient_SetDenoise));
            _VzLPRClient_SetDrawMode = GetDelegate<DCreater.VzLPRClient_SetDrawMode>(nameof(DCreater.VzLPRClient_SetDrawMode));
            _VzLPRClient_SetEncrypt = GetDelegate<DCreater.VzLPRClient_SetEncrypt>(nameof(DCreater.VzLPRClient_SetEncrypt));
            _VzLPRClient_SetFlip = GetDelegate<DCreater.VzLPRClient_SetFlip>(nameof(DCreater.VzLPRClient_SetFlip));
            _VzLPRClient_SetFrequency = GetDelegate<DCreater.VzLPRClient_SetFrequency>(nameof(DCreater.VzLPRClient_SetFrequency));
            _VzLPRClient_SetGPIORecvCallBack = GetDelegate<DCreater.VzLPRClient_SetGPIORecvCallBack>(nameof(DCreater.VzLPRClient_SetGPIORecvCallBack));
            _VzLPRClient_SetIOOutput = GetDelegate<DCreater.VzLPRClient_SetIOOutput>(nameof(DCreater.VzLPRClient_SetIOOutput));
            _VzLPRClient_SetIOOutputAuto = GetDelegate<DCreater.VzLPRClient_SetIOOutputAuto>(nameof(DCreater.VzLPRClient_SetIOOutputAuto));
            _VzLPRClient_SetIsOutputRealTimeResult = GetDelegate<DCreater.VzLPRClient_SetIsOutputRealTimeResult>(nameof(DCreater.VzLPRClient_SetIsOutputRealTimeResult));
            _VzLPRClient_SetIsShowPlateRect = GetDelegate<DCreater.VzLPRClient_SetIsShowPlateRect>(nameof(DCreater.VzLPRClient_SetIsShowPlateRect));
            _VzLPRClient_SetLEDLightControlMode = GetDelegate<DCreater.VzLPRClient_SetLEDLightControlMode>(nameof(DCreater.VzLPRClient_SetLEDLightControlMode));
            _VzLPRClient_SetLEDLightLevel = GetDelegate<DCreater.VzLPRClient_SetLEDLightLevel>(nameof(DCreater.VzLPRClient_SetLEDLightLevel));
            _VzLPRClient_SetOfflineCheck = GetDelegate<DCreater.VzLPRClient_SetOfflineCheck>(nameof(DCreater.VzLPRClient_SetOfflineCheck));
            _VzLPRClient_SetOsdParam = GetDelegate<DCreater.VzLPRClient_SetOsdParam>(nameof(DCreater.VzLPRClient_SetOsdParam));
            _VzLPRClient_SetOutputConfig = GetDelegate<DCreater.VzLPRClient_SetOutputConfig>(nameof(DCreater.VzLPRClient_SetOutputConfig));
            _VzLPRClient_SetPlateInfoCallBack = GetDelegate<DCreater.VzLPRClient_SetPlateInfoCallBack>(nameof(DCreater.VzLPRClient_SetPlateInfoCallBack));
            _VzLPRClient_SetPlateRecType = GetDelegate<DCreater.VzLPRClient_SetPlateRecType>(nameof(DCreater.VzLPRClient_SetPlateRecType));
            _VzLPRClient_SetPlateTrigType = GetDelegate<DCreater.VzLPRClient_SetPlateTrigType>(nameof(DCreater.VzLPRClient_SetPlateTrigType));
            _VzLPRClient_SetQueryPlateCallBack = GetDelegate<DCreater.VzLPRClient_SetQueryPlateCallBack>(nameof(DCreater.VzLPRClient_SetQueryPlateCallBack));
            _VzLPRClient_SetRequestTalkCallBack = GetDelegate<DCreater.VzLPRClient_SetRequestTalkCallBack>(nameof(DCreater.VzLPRClient_SetRequestTalkCallBack));
            _VzLPRClient_SetSerialParameter = GetDelegate<DCreater.VzLPRClient_SetSerialParameter>(nameof(DCreater.VzLPRClient_SetSerialParameter));
            _VzLPRClient_SetShutter = GetDelegate<DCreater.VzLPRClient_SetShutter>(nameof(DCreater.VzLPRClient_SetShutter));
            _VzLPRClient_SetTriggerDelay = GetDelegate<DCreater.VzLPRClient_SetTriggerDelay>(nameof(DCreater.VzLPRClient_SetTriggerDelay));
            _VzLPRClient_Setup = GetDelegate<DCreater.VzLPRClient_Setup>(nameof(DCreater.VzLPRClient_Setup));
            _VzLPRClient_SetVideoCBR = GetDelegate<DCreater.VzLPRClient_SetVideoCBR>(nameof(DCreater.VzLPRClient_SetVideoCBR));
            _VzLPRClient_SetVideoCompressMode = GetDelegate<DCreater.VzLPRClient_SetVideoCompressMode>(nameof(DCreater.VzLPRClient_SetVideoCompressMode));
            _VzLPRClient_SetVideoEncodeType = GetDelegate<DCreater.VzLPRClient_SetVideoEncodeType>(nameof(DCreater.VzLPRClient_SetVideoEncodeType));
            _VzLPRClient_SetVideoFrameCallBack = GetDelegate<DCreater.VzLPRClient_SetVideoFrameCallBack>(nameof(DCreater.VzLPRClient_SetVideoFrameCallBack));
            _VzLPRClient_SetVideoFrameRate = GetDelegate<DCreater.VzLPRClient_SetVideoFrameRate>(nameof(DCreater.VzLPRClient_SetVideoFrameRate));
            _VzLPRClient_SetVideoFrameSizeIndex = GetDelegate<DCreater.VzLPRClient_SetVideoFrameSizeIndex>(nameof(DCreater.VzLPRClient_SetVideoFrameSizeIndex));
            _VzLPRClient_SetVideoFrameSizeIndexEx = GetDelegate<DCreater.VzLPRClient_SetVideoFrameSizeIndexEx>(nameof(DCreater.VzLPRClient_SetVideoFrameSizeIndexEx));
            _VzLPRClient_SetVideoPara = GetDelegate<DCreater.VzLPRClient_SetVideoPara>(nameof(DCreater.VzLPRClient_SetVideoPara));
            _VzLPRClient_SetVideoVBR = GetDelegate<DCreater.VzLPRClient_SetVideoVBR>(nameof(DCreater.VzLPRClient_SetVideoVBR));
            _VzLPRClient_SetVirtualLoop = GetDelegate<DCreater.VzLPRClient_SetVirtualLoop>(nameof(DCreater.VzLPRClient_SetVirtualLoop));
            _VzLPRClient_SetWLCheckMethod = GetDelegate<DCreater.VzLPRClient_SetWLCheckMethod>(nameof(DCreater.VzLPRClient_SetWLCheckMethod));
            _VzLPRClient_SetWLFuzzy = GetDelegate<DCreater.VzLPRClient_SetWLFuzzy>(nameof(DCreater.VzLPRClient_SetWLFuzzy));
            _VZLPRClient_StartFindDeviceEx = GetDelegate<DCreater.VZLPRClient_StartFindDeviceEx>(nameof(DCreater.VZLPRClient_StartFindDeviceEx));
            _VzLPRClient_StartRealPlay = GetDelegate<DCreater.VzLPRClient_StartRealPlay>(nameof(DCreater.VzLPRClient_StartRealPlay));
            _VzLPRClient_StartRealPlayDecData = GetDelegate<DCreater.VzLPRClient_StartRealPlayDecData>(nameof(DCreater.VzLPRClient_StartRealPlayDecData));
            _VzLPRClient_StartRealPlayFrameCallBack = GetDelegate<DCreater.VzLPRClient_StartRealPlayFrameCallBack>(nameof(DCreater.VzLPRClient_StartRealPlayFrameCallBack));
            _VzLPRClient_StartRecordAudio = GetDelegate<DCreater.VzLPRClient_StartRecordAudio>(nameof(DCreater.VzLPRClient_StartRecordAudio));
            _VzLPRClient_StartTalk = GetDelegate<DCreater.VzLPRClient_StartTalk>(nameof(DCreater.VzLPRClient_StartTalk));
            _VZLPRClient_StopFindDevice = GetDelegate<DCreater.VZLPRClient_StopFindDevice>(nameof(DCreater.VZLPRClient_StopFindDevice));
            _VzLPRClient_StopRealPlay = GetDelegate<DCreater.VzLPRClient_StopRealPlay>(nameof(DCreater.VzLPRClient_StopRealPlay));
            _VzLPRClient_StopRealPlayDecData = GetDelegate<DCreater.VzLPRClient_StopRealPlayDecData>(nameof(DCreater.VzLPRClient_StopRealPlayDecData));
            _VzLPRClient_StopRecordAudio = GetDelegate<DCreater.VzLPRClient_StopRecordAudio>(nameof(DCreater.VzLPRClient_StopRecordAudio));
            _VzLPRClient_StopSaveRealData = GetDelegate<DCreater.VzLPRClient_StopSaveRealData>(nameof(DCreater.VzLPRClient_StopSaveRealData));
            _VzLPRClient_StopTalk = GetDelegate<DCreater.VzLPRClient_StopTalk>(nameof(DCreater.VzLPRClient_StopTalk));
            _VzLPRClient_UpdateNetworkParam = GetDelegate<DCreater.VzLPRClient_UpdateNetworkParam>(nameof(DCreater.VzLPRClient_UpdateNetworkParam));
            _VzLPRClient_WhiteListClearCustomersAndVehicles = GetDelegate<DCreater.VzLPRClient_WhiteListClearCustomersAndVehicles>(nameof(DCreater.VzLPRClient_WhiteListClearCustomersAndVehicles));
            _VzLPRClient_WhiteListDeleteVehicle = GetDelegate<DCreater.VzLPRClient_WhiteListDeleteVehicle>(nameof(DCreater.VzLPRClient_WhiteListDeleteVehicle));
            _VzLPRClient_WhiteListGetRowCount = GetDelegate<DCreater.VzLPRClient_WhiteListGetRowCount>(nameof(DCreater.VzLPRClient_WhiteListGetRowCount));
            _VzLPRClient_WhiteListGetVehicleCount = GetDelegate<DCreater.VzLPRClient_WhiteListGetVehicleCount>(nameof(DCreater.VzLPRClient_WhiteListGetVehicleCount));
            _VzLPRClient_WhiteListImportRows = GetDelegate<DCreater.VzLPRClient_WhiteListImportRows>(nameof(DCreater.VzLPRClient_WhiteListImportRows));
            _VzLPRClient_WhiteListLoadVehicle = GetDelegate<DCreater.VzLPRClient_WhiteListLoadVehicle>(nameof(DCreater.VzLPRClient_WhiteListLoadVehicle));
            _VzLPRClient_WhiteListSetQueryCallBack = GetDelegate<DCreater.VzLPRClient_WhiteListSetQueryCallBack>(nameof(DCreater.VzLPRClient_WhiteListSetQueryCallBack));
            _VzLPRClient_WhiteListUpdateVehicleByID = GetDelegate<DCreater.VzLPRClient_WhiteListUpdateVehicleByID>(nameof(DCreater.VzLPRClient_WhiteListUpdateVehicleByID));
            _VzLPRClient_WriteUserData = GetDelegate<DCreater.VzLPRClient_WriteUserData>(nameof(DCreater.VzLPRClient_WriteUserData));
        }
        public override string GetFileFullName()
        {
            return Path.GetFullPath(Environment.Is64BitProcess ? VzClientSdk.DllFileNameX64 : VzClientSdk.DllFileNameX86);
        }
        /// <summary>
        /// 复制内存
        /// </summary>
        /// <param name="Destination"></param>
        /// <param name="Source"></param>
        /// <param name="Length"></param>
        [DllImport("kernel32.dll")]
        public static extern void CopyMemory(IntPtr Destination, IntPtr Source, int Length);
        #region // 显示实现
        void IVzClientSdkProxy.CopyMemory(IntPtr Destination, IntPtr Source, int Length) => CopyMemory(Destination, Source, Length);
        int IVzClientSdkProxy.VzLPRClient_CancelOfflineCheck(IntPtr handle) => _VzLPRClient_CancelOfflineCheck.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_ChangeEncryptKey(IntPtr handle, IntPtr pCurrentKey, IntPtr pNewKey) => _VzLPRClient_ChangeEncryptKey.Invoke(handle, pCurrentKey, pNewKey);
        void IVzClientSdkProxy.VzLPRClient_Cleanup() => _VzLPRClient_Cleanup.Invoke();
        int IVzClientSdkProxy.VzLPRClient_Close(IntPtr handle) => _VzLPRClient_Close.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_CloseByIP(string pStrIP) => _VzLPRClient_CloseByIP.Invoke(pStrIP);
        int IVzClientSdkProxy.VzLPRClient_ForceTrigger(IntPtr handle) => _VzLPRClient_ForceTrigger.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_GetAlgResultParam(IntPtr handle, ref int reco_dis) => _VzLPRClient_GetAlgResultParam.Invoke(handle, ref reco_dis);
        int IVzClientSdkProxy.VzLPRClient_GetCameraConfig(IntPtr handle, int command, short channel, IntPtr pOutBuffer, int dwOutBufferSize) => _VzLPRClient_GetCameraConfig.Invoke(handle, command, channel, pOutBuffer, dwOutBufferSize);
        int IVzClientSdkProxy.VzLPRClient_GetCenterServerDeviceReg(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_DEVICE_REG pCenterServerDeviceReg) => _VzLPRClient_GetCenterServerDeviceReg.Invoke(handle, ref pCenterServerDeviceReg);
        int IVzClientSdkProxy.VzLPRClient_GetCenterServerGionin(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_GIONIN pCenterServerGionin) => _VzLPRClient_GetCenterServerGionin.Invoke(handle, ref pCenterServerGionin);
        int IVzClientSdkProxy.VzLPRClient_GetCenterServerHostBak(IntPtr handle, ref string pCenterServerHostBak) => _VzLPRClient_GetCenterServerHostBak.Invoke(handle, ref pCenterServerHostBak);
        int IVzClientSdkProxy.VzLPRClient_GetCenterServerNet(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_NET pCenterServerNet) => _VzLPRClient_GetCenterServerNet.Invoke(handle, ref pCenterServerNet);
        int IVzClientSdkProxy.VzLPRClient_GetCenterServerPlate(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_PLATE pCenterServerPlate) => _VzLPRClient_GetCenterServerPlate.Invoke(handle, ref pCenterServerPlate);
        int IVzClientSdkProxy.VzLPRClient_GetCenterServerSerial(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_SERIAL pCenterServerSerial) => _VzLPRClient_GetCenterServerSerial.Invoke(handle, ref pCenterServerSerial);
        int IVzClientSdkProxy.VzLPRClient_GetDenoise(IntPtr handle, ref int mode, ref int strength) => _VzLPRClient_GetDenoise.Invoke(handle, ref mode, ref strength);
        int IVzClientSdkProxy.VzLPRClient_GetDeviceIP(IntPtr handle, ref byte ip, int max_count) => _VzLPRClient_GetDeviceIP.Invoke(handle, ref ip, max_count);
        int IVzClientSdkProxy.VzLPRClient_GetDrawMode(IntPtr handle, ref VZ_LPRC_DRAWMODE pDrawMode) => _VzLPRClient_GetDrawMode.Invoke(handle, ref pDrawMode);
        int IVzClientSdkProxy.VzLPRClient_GetEMS(IntPtr handle, ref VZ_LPRC_ACTIVE_ENCRYPT pData) => _VzLPRClient_GetEMS.Invoke(handle, ref pData);
        int IVzClientSdkProxy.VzLPRClient_GetFlip(IntPtr handle, ref int flip) => _VzLPRClient_GetFlip.Invoke(handle, ref flip);
        int IVzClientSdkProxy.VzLPRClient_GetFrequency(IntPtr handle, ref int frequency) => _VzLPRClient_GetFrequency.Invoke(handle, ref frequency);
        int IVzClientSdkProxy.VzLPRClient_GetGPIOValue(IntPtr handle, int gpioIn, out int value) => _VzLPRClient_GetGPIOValue.Invoke(handle, gpioIn, out value);
        int IVzClientSdkProxy.VzLPRClient_GetHwBoardType(IntPtr handle, ref int board_type) => _VzLPRClient_GetHwBoardType.Invoke(handle, ref board_type);
        int IVzClientSdkProxy.VzLPRClient_GetHwBoardVersion(IntPtr handle, ref int board_version, ref long exdataSize) => _VzLPRClient_GetHwBoardVersion.Invoke(handle, ref board_version, ref exdataSize);
        int IVzClientSdkProxy.VzLPRClient_GetIOOutput(IntPtr handle, int uChnId, ref int pOutput) => _VzLPRClient_GetIOOutput.Invoke(handle, uChnId, ref pOutput);
        int IVzClientSdkProxy.VzLPRClient_GetJpegStreamFromRealPlayDec(IntPtr handle, IntPtr pDstBuf, uint uSizeBuf, int nQuality) => _VzLPRClient_GetJpegStreamFromRealPlayDec.Invoke(handle, pDstBuf, uSizeBuf, nQuality);
        int IVzClientSdkProxy.VzLPRClient_GetLEDLightStatus(IntPtr handle, ref int pLevelNow, ref int pLevelMax) => _VzLPRClient_GetLEDLightStatus.Invoke(handle, ref pLevelNow, ref pLevelMax);
        int IVzClientSdkProxy.VzLPRClient_GetOsdParam(IntPtr handle, IntPtr pParam) => _VzLPRClient_GetOsdParam.Invoke(handle, pParam);
        int IVzClientSdkProxy.VzLPRClient_GetOutputConfig(IntPtr handle, ref VZ_OutputConfigInfo pOutputConfigInfo) => _VzLPRClient_GetOutputConfig.Invoke(handle, ref pOutputConfigInfo);
        int IVzClientSdkProxy.VzLPRClient_GetPlateRecType(IntPtr handle, ref int pBitsRecType) => _VzLPRClient_GetPlateRecType.Invoke(handle, ref pBitsRecType);
        int IVzClientSdkProxy.VzLPRClient_GetPlateTrigType(IntPtr handle, ref int pBitsTrigType) => _VzLPRClient_GetPlateTrigType.Invoke(handle, ref pBitsTrigType);
        int IVzClientSdkProxy.VzLPRClient_GetRegionOfInterestEx(IntPtr handle, ref VZ_LPRC_ROI_EX pROI) => _VzLPRClient_GetRegionOfInterestEx.Invoke(handle, ref pROI);
        int IVzClientSdkProxy.VzLPRClient_GetSerialNo(string ip, short port, ref int SerHi, ref int SerLo) => _VzLPRClient_GetSerialNo.Invoke(ip, port, ref SerHi, ref SerLo);
        int IVzClientSdkProxy.VzLPRClient_GetSerialNumber(IntPtr handle, ref VZ_DEV_SERIAL_NUM pSN) => _VzLPRClient_GetSerialNumber.Invoke(handle, ref pSN);
        int IVzClientSdkProxy.VzLPRClient_GetSerialParameter(IntPtr handle, int nSerialPort, ref VZ_SERIAL_PARAMETER pParameter) => _VzLPRClient_GetSerialParameter.Invoke(handle, nSerialPort, ref pParameter);
        int IVzClientSdkProxy.VzLPRClient_GetShutter(IntPtr handle, ref int shutter) => _VzLPRClient_GetShutter.Invoke(handle, ref shutter);
        int IVzClientSdkProxy.VzLPRClient_GetSnapShootToJpeg2(IntPtr nPlayHandle, string pFullPathName, int nQuality) => _VzLPRClient_GetSnapShootToJpeg2.Invoke(nPlayHandle, pFullPathName, nQuality);
        int IVzClientSdkProxy.VzLPRClient_SaveSnapImageToJpeg(IntPtr handle, string pFullPathName) => _VzLPRClient_SaveSnapImageToJpeg.Invoke(handle, pFullPathName);
        int IVzClientSdkProxy.VzLPRClient_GetSupportedProvinces(IntPtr handle, ref VZ_LPRC_PROVINCE_INFO pProvInfo) => _VzLPRClient_GetSupportedProvinces.Invoke(handle, ref pProvInfo);
        int IVzClientSdkProxy.VzLPRClient_GetTriggerDelay(IntPtr handle, ref int nDelay) => _VzLPRClient_GetTriggerDelay.Invoke(handle, ref nDelay);
        int IVzClientSdkProxy.VzLPRClient_GetVideoCBR(IntPtr handle, ref int rateval, ref int ratelist) => _VzLPRClient_GetVideoCBR.Invoke(handle, ref rateval, ref ratelist);
        int IVzClientSdkProxy.VzLPRClient_GetVideoCompressMode(IntPtr handle, ref int modeval) => _VzLPRClient_GetVideoCompressMode.Invoke(handle, ref modeval);
        int IVzClientSdkProxy.VzLPRClient_GetVideoEncodeType(IntPtr handle, ref int pEncType) => _VzLPRClient_GetVideoEncodeType.Invoke(handle, ref pEncType);
        int IVzClientSdkProxy.VzLPRClient_GetVideoFrameRate(IntPtr handle, ref int Rateval) => _VzLPRClient_GetVideoFrameRate.Invoke(handle, ref Rateval);
        int IVzClientSdkProxy.VzLPRClient_GetVideoFrameSizeIndex(IntPtr handle, ref int sizeval) => _VzLPRClient_GetVideoFrameSizeIndex.Invoke(handle, ref sizeval);
        int IVzClientSdkProxy.VzLPRClient_GetVideoFrameSizeIndexEx(IntPtr handle, ref int sizeval) => _VzLPRClient_GetVideoFrameSizeIndexEx.Invoke(handle, ref sizeval);
        int IVzClientSdkProxy.VzLPRClient_GetVideoPara(IntPtr handle, ref int brt, ref int cst, ref int sat, ref int hue) => _VzLPRClient_GetVideoPara.Invoke(handle, ref brt, ref cst, ref sat, ref hue);
        int IVzClientSdkProxy.VzLPRClient_GetVideoVBR(IntPtr handle, ref int levelval) => _VzLPRClient_GetVideoVBR.Invoke(handle, ref levelval);
        int IVzClientSdkProxy.VzLPRClient_GetVirtualLoop(IntPtr handle, ref VZ_LPRC_VIRTUAL_LOOPS pVirtualLoops) => _VzLPRClient_GetVirtualLoop.Invoke(handle, ref pVirtualLoops);
        int IVzClientSdkProxy.VzLPRClient_GetWLCheckMethod(IntPtr handle, ref int nType) => _VzLPRClient_GetWLCheckMethod.Invoke(handle, ref nType);
        int IVzClientSdkProxy.VzLPRClient_GetWLFuzzy(IntPtr handle, ref int nFuzzyType, ref int nFuzzyLen, ref bool bFuzzyCC) => _VzLPRClient_GetWLFuzzy.Invoke(handle, ref nFuzzyType, ref nFuzzyLen, ref bFuzzyCC);
        int IVzClientSdkProxy.VzLPRClient_ImageEncodeToJpeg(IntPtr pImgInfo, IntPtr pDstBuf, int uSizeBuf, int nQuality) => _VzLPRClient_ImageEncodeToJpeg.Invoke(pImgInfo, pDstBuf, uSizeBuf, nQuality);
        int IVzClientSdkProxy.VzLPRClient_ImageSaveToJpeg(IntPtr pImgInfo, string pFullPathName, int nQuality) => _VzLPRClient_ImageSaveToJpeg.Invoke(pImgInfo, pFullPathName, nQuality);
        int IVzClientSdkProxy.VzLPRClient_ImageSaveToJpegEx(VZ_LPRC_IMAGE_INFO pImgInfo, string pFullPathName, int nQuality, IMG_SIZE_MODE sizeMode) => _VzLPRClient_ImageSaveToJpegEx.Invoke(pImgInfo, pFullPathName, nQuality, sizeMode);
        int IVzClientSdkProxy.VzLPRClient_IsConnected(IntPtr handle, ref byte pStatus) => _VzLPRClient_IsConnected.Invoke(handle, ref pStatus);
        int IVzClientSdkProxy.VzLPRClient_LoadImageById(IntPtr handle, int id, IntPtr pdata, IntPtr size) => _VzLPRClient_LoadImageById.Invoke(handle, id, pdata, size);
        IntPtr IVzClientSdkProxy.VzLPRClient_Open(string pStrIP, ushort wPort, string pStrUserName, string pStrPassword) => _VzLPRClient_Open.Invoke(pStrIP, wPort, pStrUserName, pStrPassword);
        IntPtr IVzClientSdkProxy.VzLPRClient_OpenV2(string pStrIP, ushort wPort, string pStrUserName, string pStrPassword, ushort wRtspPort, int network_type, string sn) => _VzLPRClient_OpenV2.Invoke(pStrIP, wPort, pStrUserName, pStrPassword, wRtspPort, network_type, sn);
        int IVzClientSdkProxy.VzLPRClient_PlayVoice(IntPtr handle, string voice, int interval, int volume, int male) => _VzLPRClient_PlayVoice.Invoke(handle, voice, interval, volume, male);
        int IVzClientSdkProxy.VzLPRClient_PresetProvinceIndex(IntPtr handle, int nIndex) => _VzLPRClient_PresetProvinceIndex.Invoke(handle, nIndex);
        int IVzClientSdkProxy.VzLPRClient_QueryCountByTimeAndPlate(IntPtr handle, string pStartTime, string pEndTime, string keyword) => _VzLPRClient_QueryCountByTimeAndPlate.Invoke(handle, pStartTime, pEndTime, keyword);
        int IVzClientSdkProxy.VzLPRClient_QueryPageRecordByTimeAndPlate(IntPtr handle, string pStartTime, string pEndTime, string keyword, int start, int end) => _VzLPRClient_QueryPageRecordByTimeAndPlate.Invoke(handle, pStartTime, pEndTime, keyword, start, end);
        int IVzClientSdkProxy.VzLPRClient_QueryRecordByTimeAndPlate(IntPtr handle, string pStartTime, string pEndTime, string keyword) => _VzLPRClient_QueryRecordByTimeAndPlate.Invoke(handle, pStartTime, pEndTime, keyword);
        int IVzClientSdkProxy.VzLPRClient_ReadUserData(IntPtr handle, IntPtr pBuffer, uint uSizeBuf) => _VzLPRClient_ReadUserData.Invoke(handle, pBuffer, uSizeBuf);
        int IVzClientSdkProxy.VzLPRClient_ResetEncryptKey(IntPtr handle, IntPtr pPrimeKey, IntPtr pNewKey) => _VzLPRClient_ResetEncryptKey.Invoke(handle, pPrimeKey, pNewKey);
        int IVzClientSdkProxy.VzLPRClient_RGet_Encode_Param(IntPtr handle, int stream, ref VZ_LPRC_R_ENCODE_PARAM param) => _VzLPRClient_RGet_Encode_Param.Invoke(handle, stream, ref param);
        int IVzClientSdkProxy.VzLPRClient_RGet_Encode_Param_Property(IntPtr handle, ref VZ_LPRC_R_ENCODE_PARAM_PROPERTY param) => _VzLPRClient_RGet_Encode_Param_Property.Invoke(handle, ref param);
        int IVzClientSdkProxy.VzLPRClient_RGet_Video_Param(IntPtr handle, ref VZ_LPRC_R_VIDEO_PARAM param) => _VzLPRClient_RGet_Video_Param.Invoke(handle, ref param);
        int IVzClientSdkProxy.VzLPRClient_RSet_Encode_Param(IntPtr handle, int stream, ref VZ_LPRC_R_ENCODE_PARAM param) => _VzLPRClient_RSet_Encode_Param.Invoke(handle, stream, ref param);
        int IVzClientSdkProxy.VzLPRClient_RSet_Video_Param(IntPtr handle, ref VZ_LPRC_R_VIDEO_PARAM param) => _VzLPRClient_RSet_Video_Param.Invoke(handle, ref param);
        int IVzClientSdkProxy.VzLPRClient_SaveRealData(IntPtr handle, string sFileName) => _VzLPRClient_SaveRealData.Invoke(handle, sFileName);
        int IVzClientSdkProxy.VzLPRClient_SerialSend(IntPtr nSerialHandle, IntPtr pData, int uSizeData) => _VzLPRClient_SerialSend.Invoke(nSerialHandle, pData, uSizeData);
        IntPtr IVzClientSdkProxy.VzLPRClient_SerialStart(IntPtr handle, int nSerialPort, VZDEV_SERIAL_RECV_DATA_CALLBACK func, IntPtr pUserData) => _VzLPRClient_SerialStart.Invoke(handle, nSerialPort, func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_SerialStop(IntPtr nSerialHandle) => _VzLPRClient_SerialStop.Invoke(nSerialHandle);
        int IVzClientSdkProxy.VzLPRClient_SetAlgResultParam(IntPtr handle, int reco_dis) => _VzLPRClient_SetAlgResultParam.Invoke(handle, reco_dis);
        int IVzClientSdkProxy.VzLPRClient_SetCenterServerDeviceReg(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_DEVICE_REG pCenterServerDeviceReg) => _VzLPRClient_SetCenterServerDeviceReg.Invoke(handle, ref pCenterServerDeviceReg);
        int IVzClientSdkProxy.VzLPRClient_SetCenterServerGionin(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_GIONIN pCenterServerGionin) => _VzLPRClient_SetCenterServerGionin.Invoke(handle, ref pCenterServerGionin);
        int IVzClientSdkProxy.VzLPRClient_SetCenterServerHostBak(IntPtr handle, string pCenterServerHostBak) => _VzLPRClient_SetCenterServerHostBak.Invoke(handle, pCenterServerHostBak);
        int IVzClientSdkProxy.VzLPRClient_SetCenterServerNet(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_NET pCenterServerNet) => _VzLPRClient_SetCenterServerNet.Invoke(handle, ref pCenterServerNet);
        int IVzClientSdkProxy.VzLPRClient_SetCenterServerPlate(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_PLATE pCenterServerPlate) => _VzLPRClient_SetCenterServerPlate.Invoke(handle, ref pCenterServerPlate);
        int IVzClientSdkProxy.VzLPRClient_SetCenterServerSerial(IntPtr handle, ref VZ_LPRC_CENTER_SERVER_SERIAL pCenterServerSerial) => _VzLPRClient_SetCenterServerSerial.Invoke(handle, ref pCenterServerSerial);
        int IVzClientSdkProxy.VZLPRClient_SetCommonNotifyCallBack(VZLPRC_COMMON_NOTIFY_CALLBACK func, IntPtr pUserData) => _VZLPRClient_SetCommonNotifyCallBack.Invoke(func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_SetDateTime(IntPtr handle, IntPtr IntpDTInfo) => _VzLPRClient_SetDateTime.Invoke(handle, IntpDTInfo);
        int IVzClientSdkProxy.VzLPRClient_SetDenoise(IntPtr handle, int mode, int strength) => _VzLPRClient_SetDenoise.Invoke(handle, mode, strength);
        int IVzClientSdkProxy.VzLPRClient_SetDrawMode(IntPtr handle, ref VZ_LPRC_DRAWMODE pDrawMode) => _VzLPRClient_SetDrawMode.Invoke(handle, ref pDrawMode);
        int IVzClientSdkProxy.VzLPRClient_SetEncrypt(IntPtr handle, IntPtr pCurrentKey, uint nEncyptId) => _VzLPRClient_SetEncrypt.Invoke(handle, pCurrentKey, nEncyptId);
        int IVzClientSdkProxy.VzLPRClient_SetFlip(IntPtr handle, int flip) => _VzLPRClient_SetFlip.Invoke(handle, flip);
        int IVzClientSdkProxy.VzLPRClient_SetFrequency(IntPtr handle, int frequency) => _VzLPRClient_SetFrequency.Invoke(handle, frequency);
        int IVzClientSdkProxy.VzLPRClient_SetGPIORecvCallBack(IntPtr handle, VZLPRC_GPIO_RECV_CALLBACK func, IntPtr pUserData) => _VzLPRClient_SetGPIORecvCallBack.Invoke(handle, func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_SetIOOutput(IntPtr handle, int uChnId, int nOutput) => _VzLPRClient_SetIOOutput.Invoke(handle, uChnId, nOutput);
        int IVzClientSdkProxy.VzLPRClient_SetIOOutputAuto(IntPtr handle, int uChnId, int nDuration) => _VzLPRClient_SetIOOutputAuto.Invoke(handle, uChnId, nDuration);
        int IVzClientSdkProxy.VzLPRClient_SetIsOutputRealTimeResult(IntPtr handle, bool bOutput) => _VzLPRClient_SetIsOutputRealTimeResult.Invoke(handle, bOutput);
        int IVzClientSdkProxy.VzLPRClient_SetIsShowPlateRect(IntPtr handle, int bShow) => _VzLPRClient_SetIsShowPlateRect.Invoke(handle, bShow);
        int IVzClientSdkProxy.VzLPRClient_SetLEDLightControlMode(IntPtr handle, VZ_LED_CTRL eCtrl) => _VzLPRClient_SetLEDLightControlMode.Invoke(handle, eCtrl);
        int IVzClientSdkProxy.VzLPRClient_SetLEDLightLevel(IntPtr handle, int nLevel) => _VzLPRClient_SetLEDLightLevel.Invoke(handle, nLevel);
        int IVzClientSdkProxy.VzLPRClient_SetOfflineCheck(IntPtr handle) => _VzLPRClient_SetOfflineCheck.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_SetOsdParam(IntPtr handle, IntPtr pParam) => _VzLPRClient_SetOsdParam.Invoke(handle, pParam);
        int IVzClientSdkProxy.VzLPRClient_SetOutputConfig(IntPtr handle, ref VZ_OutputConfigInfo pOutputConfigInfo) => _VzLPRClient_SetOutputConfig.Invoke(handle, ref pOutputConfigInfo);
        int IVzClientSdkProxy.VzLPRClient_SetPlateInfoCallBack(IntPtr handle, VZLPRC_PLATE_INFO_CALLBACK func, IntPtr pUserData, int bEnableImage) => _VzLPRClient_SetPlateInfoCallBack.Invoke(handle, func, pUserData, bEnableImage);
        int IVzClientSdkProxy.VzLPRClient_SetPlateRecType(IntPtr handle, uint uBitsRecType) => _VzLPRClient_SetPlateRecType.Invoke(handle, uBitsRecType);
        int IVzClientSdkProxy.VzLPRClient_SetPlateTrigType(IntPtr handle, uint uBitsTrigType) => _VzLPRClient_SetPlateTrigType.Invoke(handle, uBitsTrigType);
        int IVzClientSdkProxy.VzLPRClient_SetQueryPlateCallBack(IntPtr handle, VZLPRC_PLATE_INFO_CALLBACK func, IntPtr pUserData) => _VzLPRClient_SetQueryPlateCallBack.Invoke(handle, func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_SetRequestTalkCallBack(IntPtr handle, VZLPRC_REQUEST_TALK_CALLBACK func, IntPtr pUserData) => _VzLPRClient_SetRequestTalkCallBack.Invoke(handle, func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_SetSerialParameter(IntPtr handle, int nSerialPort, ref VZ_SERIAL_PARAMETER pParameter) => _VzLPRClient_SetSerialParameter.Invoke(handle, nSerialPort, ref pParameter);
        int IVzClientSdkProxy.VzLPRClient_SetShutter(IntPtr handle, int shutter) => _VzLPRClient_SetShutter.Invoke(handle, shutter);
        int IVzClientSdkProxy.VzLPRClient_SetTriggerDelay(IntPtr handle, int nDelay) => _VzLPRClient_SetTriggerDelay.Invoke(handle, nDelay);
        int IVzClientSdkProxy.VzLPRClient_Setup() => _VzLPRClient_Setup.Invoke();
        int IVzClientSdkProxy.VzLPRClient_SetVideoCBR(IntPtr handle, int rateval) => _VzLPRClient_SetVideoCBR.Invoke(handle, rateval);
        int IVzClientSdkProxy.VzLPRClient_SetVideoCompressMode(IntPtr handle, int modeval) => _VzLPRClient_SetVideoCompressMode.Invoke(handle, modeval);
        int IVzClientSdkProxy.VzLPRClient_SetVideoEncodeType(IntPtr handle, int cmd) => _VzLPRClient_SetVideoEncodeType.Invoke(handle, cmd);
        int IVzClientSdkProxy.VzLPRClient_SetVideoFrameCallBack(IntPtr handle, VZLPRC_VIDEO_FRAME_CALLBACK pFunc, IntPtr pUserData) => _VzLPRClient_SetVideoFrameCallBack.Invoke(handle, pFunc, pUserData);
        int IVzClientSdkProxy.VzLPRClient_SetVideoFrameRate(IntPtr handle, int Rateval) => _VzLPRClient_SetVideoFrameRate.Invoke(handle, Rateval);
        int IVzClientSdkProxy.VzLPRClient_SetVideoFrameSizeIndex(IntPtr handle, int sizeval) => _VzLPRClient_SetVideoFrameSizeIndex.Invoke(handle, sizeval);
        int IVzClientSdkProxy.VzLPRClient_SetVideoFrameSizeIndexEx(IntPtr handle, int sizeval) => _VzLPRClient_SetVideoFrameSizeIndexEx.Invoke(handle, sizeval);
        int IVzClientSdkProxy.VzLPRClient_SetVideoPara(IntPtr handle, int brt, int cst, int sat, int hue) => _VzLPRClient_SetVideoPara.Invoke(handle, brt, cst, sat, hue);
        int IVzClientSdkProxy.VzLPRClient_SetVideoVBR(IntPtr handle, int levelval) => _VzLPRClient_SetVideoVBR.Invoke(handle, levelval);
        int IVzClientSdkProxy.VzLPRClient_SetVirtualLoop(IntPtr handle, ref VZ_LPRC_VIRTUAL_LOOPS pVirtualLoops) => _VzLPRClient_SetVirtualLoop.Invoke(handle, ref pVirtualLoops);
        int IVzClientSdkProxy.VzLPRClient_SetWLCheckMethod(IntPtr handle, int nType) => _VzLPRClient_SetWLCheckMethod.Invoke(handle, nType);
        int IVzClientSdkProxy.VzLPRClient_SetWLFuzzy(IntPtr handle, int nFuzzyType, int nFuzzyLen, bool bFuzzyCC) => _VzLPRClient_SetWLFuzzy.Invoke(handle, nFuzzyType, nFuzzyLen, bFuzzyCC);
        int IVzClientSdkProxy.VZLPRClient_StartFindDeviceEx(VZLPRC_FIND_DEVICE_CALLBACK_EX func, IntPtr pUserData) => _VZLPRClient_StartFindDeviceEx.Invoke(func, pUserData);
        IntPtr IVzClientSdkProxy.VzLPRClient_StartRealPlay(IntPtr handle, IntPtr hWnd) => _VzLPRClient_StartRealPlay.Invoke(handle, hWnd);
        int IVzClientSdkProxy.VzLPRClient_StartRealPlayDecData(IntPtr handle) => _VzLPRClient_StartRealPlayDecData.Invoke(handle);
        IntPtr IVzClientSdkProxy.VzLPRClient_StartRealPlayFrameCallBack(IntPtr handle, IntPtr hWnd, VZLPRC_VIDEO_FRAME_CALLBACK_EX func, IntPtr pUserData) => _VzLPRClient_StartRealPlayFrameCallBack.Invoke(handle, hWnd, func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_StartRecordAudio(IntPtr handle, string file_path) => _VzLPRClient_StartRecordAudio.Invoke(handle, file_path);
        int IVzClientSdkProxy.VzLPRClient_StartTalk(IntPtr handle, int client_win_size) => _VzLPRClient_StartTalk.Invoke(handle, client_win_size);
        int IVzClientSdkProxy.VZLPRClient_StopFindDevice() => _VZLPRClient_StopFindDevice.Invoke();
        int IVzClientSdkProxy.VzLPRClient_StopRealPlay(IntPtr hRealHandle) => _VzLPRClient_StopRealPlay.Invoke(hRealHandle);
        int IVzClientSdkProxy.VzLPRClient_StopRealPlayDecData(IntPtr handle) => _VzLPRClient_StopRealPlayDecData.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_StopRecordAudio(IntPtr handle) => _VzLPRClient_StopRecordAudio.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_StopSaveRealData(IntPtr handle) => _VzLPRClient_StopSaveRealData.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_StopTalk(IntPtr handle) => _VzLPRClient_StopTalk.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_UpdateNetworkParam(uint sh, uint sl, string strNewIP, string strGateway, string strNetmask) => _VzLPRClient_UpdateNetworkParam.Invoke(sh, sl, strNewIP, strGateway, strNetmask);
        int IVzClientSdkProxy.VzLPRClient_WhiteListClearCustomersAndVehicles(IntPtr handle) => _VzLPRClient_WhiteListClearCustomersAndVehicles.Invoke(handle);
        int IVzClientSdkProxy.VzLPRClient_WhiteListDeleteVehicle(IntPtr handle, string strPlateID) => _VzLPRClient_WhiteListDeleteVehicle.Invoke(handle, strPlateID);
        int IVzClientSdkProxy.VzLPRClient_WhiteListGetRowCount(IntPtr handle, ref int count, ref VZ_LPR_WLIST_SEARCH_WHERE pSearchWhere) => _VzLPRClient_WhiteListGetRowCount.Invoke(handle, ref count, ref pSearchWhere);
        int IVzClientSdkProxy.VzLPRClient_WhiteListGetVehicleCount(IntPtr handle, ref uint pCount, ref VZ_LPR_WLIST_SEARCH_WHERE pSearchWhere) => _VzLPRClient_WhiteListGetVehicleCount.Invoke(handle, ref pCount, ref pSearchWhere);
        int IVzClientSdkProxy.VzLPRClient_WhiteListImportRows(IntPtr handle, uint rowcount, ref VZ_LPR_WLIST_ROW pRowDatas, ref VZ_LPR_WLIST_IMPORT_RESULT pResults) => _VzLPRClient_WhiteListImportRows.Invoke(handle, rowcount, ref pRowDatas, ref pResults);
        int IVzClientSdkProxy.VzLPRClient_WhiteListLoadVehicle(IntPtr handle, ref VZ_LPR_WLIST_LOAD_CONDITIONS pLoadCondition) => _VzLPRClient_WhiteListLoadVehicle.Invoke(handle, ref pLoadCondition);
        int IVzClientSdkProxy.VzLPRClient_WhiteListSetQueryCallBack(IntPtr handle, VZLPRC_WLIST_QUERY_CALLBACK func, IntPtr pUserData) => _VzLPRClient_WhiteListSetQueryCallBack.Invoke(handle, func, pUserData);
        int IVzClientSdkProxy.VzLPRClient_WhiteListUpdateVehicleByID(IntPtr handle, ref VZ_LPR_WLIST_VEHICLE pVehicle) => _VzLPRClient_WhiteListUpdateVehicleByID.Invoke(handle, ref pVehicle);
        int IVzClientSdkProxy.VzLPRClient_WriteUserData(IntPtr handle, IntPtr pUserData, uint uSizeData) => _VzLPRClient_WriteUserData.Invoke(handle, pUserData, uSizeData);
        #endregion 显示实现
    }
}
