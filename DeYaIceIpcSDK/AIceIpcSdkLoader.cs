using System.Data.NHInterfaces;
using System.IO;
using System.Text;

namespace System.Data.DeYaIceIpcSDK
{
    internal class IceIpcSdkLoader : ASdkDynamicLoader, IIceIpcSdkProxy
    {
        #region // 委托变量
        private DCreater.ICE_IPCSDK_Init _ICE_IPCSDK_Init;
        private DCreater.ICE_IPCSDK_Fini _ICE_IPCSDK_Fini;
        private DCreater.ICE_IPCSDK_SetPlateCallback _ICE_IPCSDK_SetPlateCallback;
        private DCreater.ICE_IPCSDK_SetPastPlateCallBack _ICE_IPCSDK_SetPastPlateCallBack;
        private DCreater.ICE_IPCSDK_SetSerialPortCallBack _ICE_IPCSDK_SetSerialPortCallBack;
        private DCreater.ICE_IPCSDK_SetSerialPortCallBack_RS232 _ICE_IPCSDK_SetSerialPortCallBack_RS232;
        private DCreater.ICE_IPCSDK_SetDeviceEventCallBack _ICE_IPCSDK_SetDeviceEventCallBack;
        private DCreater.ICE_IPCSDK_SetTalkEventCallBack _ICE_IPCSDK_SetTalkEventCallBack;
        private DCreater.ICE_IPCSDK_SetFrameCallback _ICE_IPCSDK_SetFrameCallback;
        private DCreater.ICE_IPCSDK_OpenPreview _ICE_IPCSDK_OpenPreview;
        private DCreater.ICE_IPCSDK_OpenPreview_Passwd _ICE_IPCSDK_OpenPreview_Passwd;
        private DCreater.ICE_IPCSDK_OpenDevice _ICE_IPCSDK_OpenDevice;
        private DCreater.ICE_IPCSDK_OpenDevice_Passwd _ICE_IPCSDK_OpenDevice_Passwd;
        private DCreater.ICE_IPCSDK_Open _ICE_IPCSDK_Open;
        private DCreater.ICE_IPCSDK_Open_Passwd _ICE_IPCSDK_Open_Passwd;
        private DCreater.ICE_IPCSDK_Close _ICE_IPCSDK_Close;
        private DCreater.ICE_IPCSDK_StartStream _ICE_IPCSDK_StartStream;
        private DCreater.ICE_IPCSDK_StopStream _ICE_IPCSDK_StopStream;
        private DCreater.ICE_IPCSDK_OpenGate _ICE_IPCSDK_OpenGate;
        private DCreater.ICE_IPCSDK_ControlAlarmOut _ICE_IPCSDK_ControlAlarmOut;
        private DCreater.ICE_IPCSDK_GetAlarmOutConfig _ICE_IPCSDK_GetAlarmOutConfig;
        private DCreater.ICE_IPCSDK_SetAlarmOutConfig _ICE_IPCSDK_SetAlarmOutConfig;
        private DCreater.ICE_IPCSDK_BeginTalk _ICE_IPCSDK_BeginTalk;
        private DCreater.ICE_IPCSDK_EndTalk _ICE_IPCSDK_EndTalk;
        private DCreater.ICE_IPCSDK_Trigger _ICE_IPCSDK_Trigger;
        private DCreater.ICE_IPCSDK_TriggerExt _ICE_IPCSDK_TriggerExt;
        private DCreater.ICE_IPCSDK_Capture _ICE_IPCSDK_Capture;
        private DCreater.ICE_IPCSDK_GetStatus _ICE_IPCSDK_GetStatus;
        private DCreater.ICE_IPCSDK_Reboot _ICE_IPCSDK_Reboot;
        private DCreater.ICE_IPCSDK_SyncTime _ICE_IPCSDK_SyncTime;
        private DCreater.ICE_IPCSDK_TransSerialPort _ICE_IPCSDK_TransSerialPort;
        private DCreater.ICE_IPCSDK_TransSerialPort_RS232 _ICE_IPCSDK_TransSerialPort_RS232;
        private DCreater.ICE_IPCSDK_GetDevID _ICE_IPCSDK_GetDevID;
        private DCreater.ICE_IPCSDK_StartRecord _ICE_IPCSDK_StartRecord;
        private DCreater.ICE_IPCSDK_StopRecord _ICE_IPCSDK_StopRecord;
        private DCreater.ICE_IPCSDK_SetOSDCfg _ICE_IPCSDK_SetOSDCfg;
        private DCreater.ICE_IPCSDK_WriteUserData _ICE_IPCSDK_WriteUserData;
        private DCreater.ICE_IPCSDK_ReadUserData _ICE_IPCSDK_ReadUserData;
        private DCreater.ICE_IPCSDK_WriteUserData_Binary _ICE_IPCSDK_WriteUserData_Binary;
        private DCreater.ICE_IPCSDK_ReadUserData_Binary _ICE_IPCSDK_ReadUserData_Binary;
        private DCreater.ICE_IPCSDK_GetIPAddr _ICE_IPCSDK_GetIPAddr;
        private DCreater.ICE_IPCSDK_SetIPAddr _ICE_IPCSDK_SetIPAddr;
        private DCreater.ICE_IPCSDK_SearchDev _ICE_IPCSDK_SearchDev;
        private DCreater.ICE_IPCSDK_LogConfig _ICE_IPCSDK_LogConfig;
        private DCreater.ICE_IPCSDK_Broadcast _ICE_IPCSDK_Broadcast;
        private DCreater.ICE_IPCSDK_BroadcastGroup _ICE_IPCSDK_BroadcastGroup;
        private DCreater.ICE_IPCSDK_SetCity _ICE_IPCSDK_SetCity;
        private DCreater.ICE_IPCSDK_VBR_CompareFeat _ICE_IPCSDK_VBR_CompareFeat;
        private DCreater.ICE_IPCSDK_SetLoop _ICE_IPCSDK_SetLoop;
        private DCreater.ICE_IPCSDK_GetLoop _ICE_IPCSDK_GetLoop;
        private DCreater.ICE_IPCSDK_SetTriggerMode _ICE_IPCSDK_SetTriggerMode;
        private DCreater.ICE_IPCSDK_GetTriggerMode _ICE_IPCSDK_GetTriggerMode;
        private DCreater.ICE_IPCSDK_GetCameraInfo _ICE_IPCSDK_GetCameraInfo;
        private DCreater.ICE_IPCSDK_GetUARTCfg _ICE_IPCSDK_GetUARTCfg;
        private DCreater.ICE_IPCSDK_SetUARTCfg _ICE_IPCSDK_SetUARTCfg;
        private DCreater.ICE_IPCSDK_GetIOState _ICE_IPCSDK_GetIOState;
        private DCreater.ICE_IPCSDK_getOfflineVehicleInfo _ICE_IPCSDK_getOfflineVehicleInfo;
        private DCreater.ICE_IPCSDK_getPayInfo _ICE_IPCSDK_getPayInfo;
        private DCreater.ICE_IPCSDK_SetIOEventCallBack _ICE_IPCSDK_SetIOEventCallBack;
        private DCreater.ICE_IPCSDK_SetVehicleBrand _ICE_IPCSDK_SetVehicleBrand;
        private DCreater.ICE_IPCSDK_GetVehicleBrand _ICE_IPCSDK_GetVehicleBrand;
        private DCreater.ICE_IPCSDK_SetLedCreen_Config _ICE_IPCSDK_SetLedCreen_Config;
        private DCreater.ICE_IPCSDK_GetLedCreen_Config _ICE_IPCSDK_GetLedCreen_Config;
        private DCreater.ICE_IPCSDK_SetLicense _ICE_IPCSDK_SetLicense;
        private DCreater.ICE_IPCSDK_CheckLicense _ICE_IPCSDK_CheckLicense;
        private DCreater.ICE_IPCSDK_EnableEnc _ICE_IPCSDK_EnableEnc;
        private DCreater.ICE_IPCSDK_ModifyEncPwd _ICE_IPCSDK_ModifyEncPwd;
        private DCreater.ICE_IPCSDK_SetDecPwd _ICE_IPCSDK_SetDecPwd;
        private DCreater.ICE_IPCSDK_BroadcastWav _ICE_IPCSDK_BroadcastWav;
        private DCreater.ICE_IPCSDK_UpdateWhiteListBatch _ICE_IPCSDK_UpdateWhiteListBatch;
        private DCreater.ICE_IPCSDK_GetSnapOsdCfg _ICE_IPCSDK_GetSnapOsdCfg;
        private DCreater.ICE_IPCSDK_SetSnapOsdCfg _ICE_IPCSDK_SetSnapOsdCfg;
        #endregion
        /// <summary>
        /// 构造
        /// </summary>
        public IceIpcSdkLoader()
        {
            _ICE_IPCSDK_Init = GetDelegate<DCreater.ICE_IPCSDK_Init>(nameof(DCreater.ICE_IPCSDK_Init));
            _ICE_IPCSDK_Fini = GetDelegate<DCreater.ICE_IPCSDK_Fini>(nameof(DCreater.ICE_IPCSDK_Fini));

            _ICE_IPCSDK_SetPlateCallback = GetDelegate<DCreater.ICE_IPCSDK_SetPlateCallback>(nameof(DCreater.ICE_IPCSDK_SetPlateCallback));
            _ICE_IPCSDK_SetPastPlateCallBack = GetDelegate<DCreater.ICE_IPCSDK_SetPastPlateCallBack>(nameof(DCreater.ICE_IPCSDK_SetPastPlateCallBack));
            _ICE_IPCSDK_SetSerialPortCallBack = GetDelegate<DCreater.ICE_IPCSDK_SetSerialPortCallBack>(nameof(DCreater.ICE_IPCSDK_SetSerialPortCallBack));
            _ICE_IPCSDK_SetSerialPortCallBack_RS232 = GetDelegate<DCreater.ICE_IPCSDK_SetSerialPortCallBack_RS232>(nameof(DCreater.ICE_IPCSDK_SetSerialPortCallBack_RS232));
            _ICE_IPCSDK_SetDeviceEventCallBack = GetDelegate<DCreater.ICE_IPCSDK_SetDeviceEventCallBack>(nameof(DCreater.ICE_IPCSDK_SetDeviceEventCallBack));
            _ICE_IPCSDK_SetTalkEventCallBack = GetDelegate<DCreater.ICE_IPCSDK_SetTalkEventCallBack>(nameof(DCreater.ICE_IPCSDK_SetTalkEventCallBack));
            _ICE_IPCSDK_SetFrameCallback = GetDelegate<DCreater.ICE_IPCSDK_SetFrameCallback>(nameof(DCreater.ICE_IPCSDK_SetFrameCallback));
            _ICE_IPCSDK_OpenPreview = GetDelegate<DCreater.ICE_IPCSDK_OpenPreview>(nameof(DCreater.ICE_IPCSDK_OpenPreview));
            _ICE_IPCSDK_OpenPreview_Passwd = GetDelegate<DCreater.ICE_IPCSDK_OpenPreview_Passwd>(nameof(DCreater.ICE_IPCSDK_OpenPreview_Passwd));
            _ICE_IPCSDK_OpenDevice = GetDelegate<DCreater.ICE_IPCSDK_OpenDevice>(nameof(DCreater.ICE_IPCSDK_OpenDevice));
            _ICE_IPCSDK_OpenDevice_Passwd = GetDelegate<DCreater.ICE_IPCSDK_OpenDevice_Passwd>(nameof(DCreater.ICE_IPCSDK_OpenDevice_Passwd));
            _ICE_IPCSDK_Open = GetDelegate<DCreater.ICE_IPCSDK_Open>(nameof(DCreater.ICE_IPCSDK_Open));
            _ICE_IPCSDK_Open_Passwd = GetDelegate<DCreater.ICE_IPCSDK_Open_Passwd>(nameof(DCreater.ICE_IPCSDK_Open_Passwd));
            _ICE_IPCSDK_Close = GetDelegate<DCreater.ICE_IPCSDK_Close>(nameof(DCreater.ICE_IPCSDK_Close));
            _ICE_IPCSDK_StartStream = GetDelegate<DCreater.ICE_IPCSDK_StartStream>(nameof(DCreater.ICE_IPCSDK_StartStream));
            _ICE_IPCSDK_StopStream = GetDelegate<DCreater.ICE_IPCSDK_StopStream>(nameof(DCreater.ICE_IPCSDK_StopStream));
            _ICE_IPCSDK_OpenGate = GetDelegate<DCreater.ICE_IPCSDK_OpenGate>(nameof(DCreater.ICE_IPCSDK_OpenGate));
            _ICE_IPCSDK_ControlAlarmOut = GetDelegate<DCreater.ICE_IPCSDK_ControlAlarmOut>(nameof(DCreater.ICE_IPCSDK_ControlAlarmOut));
            _ICE_IPCSDK_GetAlarmOutConfig = GetDelegate<DCreater.ICE_IPCSDK_GetAlarmOutConfig>(nameof(DCreater.ICE_IPCSDK_GetAlarmOutConfig));
            _ICE_IPCSDK_SetAlarmOutConfig = GetDelegate<DCreater.ICE_IPCSDK_SetAlarmOutConfig>(nameof(DCreater.ICE_IPCSDK_SetAlarmOutConfig));
            _ICE_IPCSDK_BeginTalk = GetDelegate<DCreater.ICE_IPCSDK_BeginTalk>(nameof(DCreater.ICE_IPCSDK_BeginTalk));
            _ICE_IPCSDK_EndTalk = GetDelegate<DCreater.ICE_IPCSDK_EndTalk>(nameof(DCreater.ICE_IPCSDK_EndTalk));
            _ICE_IPCSDK_Trigger = GetDelegate<DCreater.ICE_IPCSDK_Trigger>(nameof(DCreater.ICE_IPCSDK_Trigger));
            _ICE_IPCSDK_TriggerExt = GetDelegate<DCreater.ICE_IPCSDK_TriggerExt>(nameof(DCreater.ICE_IPCSDK_TriggerExt));
            _ICE_IPCSDK_Capture = GetDelegate<DCreater.ICE_IPCSDK_Capture>(nameof(DCreater.ICE_IPCSDK_Capture));
            _ICE_IPCSDK_GetStatus = GetDelegate<DCreater.ICE_IPCSDK_GetStatus>(nameof(DCreater.ICE_IPCSDK_GetStatus));
            _ICE_IPCSDK_Reboot = GetDelegate<DCreater.ICE_IPCSDK_Reboot>(nameof(DCreater.ICE_IPCSDK_Reboot));
            _ICE_IPCSDK_SyncTime = GetDelegate<DCreater.ICE_IPCSDK_SyncTime>(nameof(DCreater.ICE_IPCSDK_SyncTime));
            _ICE_IPCSDK_TransSerialPort = GetDelegate<DCreater.ICE_IPCSDK_TransSerialPort>(nameof(DCreater.ICE_IPCSDK_TransSerialPort));
            _ICE_IPCSDK_TransSerialPort_RS232 = GetDelegate<DCreater.ICE_IPCSDK_TransSerialPort_RS232>(nameof(DCreater.ICE_IPCSDK_TransSerialPort_RS232));
            _ICE_IPCSDK_GetDevID = GetDelegate<DCreater.ICE_IPCSDK_GetDevID>(nameof(DCreater.ICE_IPCSDK_GetDevID));
            _ICE_IPCSDK_StartRecord = GetDelegate<DCreater.ICE_IPCSDK_StartRecord>(nameof(DCreater.ICE_IPCSDK_StartRecord));
            _ICE_IPCSDK_StopRecord = GetDelegate<DCreater.ICE_IPCSDK_StopRecord>(nameof(DCreater.ICE_IPCSDK_StopRecord));
            _ICE_IPCSDK_SetOSDCfg = GetDelegate<DCreater.ICE_IPCSDK_SetOSDCfg>(nameof(DCreater.ICE_IPCSDK_SetOSDCfg));
            _ICE_IPCSDK_WriteUserData = GetDelegate<DCreater.ICE_IPCSDK_WriteUserData>(nameof(DCreater.ICE_IPCSDK_WriteUserData));
            _ICE_IPCSDK_ReadUserData = GetDelegate<DCreater.ICE_IPCSDK_ReadUserData>(nameof(DCreater.ICE_IPCSDK_ReadUserData));
            _ICE_IPCSDK_WriteUserData_Binary = GetDelegate<DCreater.ICE_IPCSDK_WriteUserData_Binary>(nameof(DCreater.ICE_IPCSDK_WriteUserData_Binary));
            _ICE_IPCSDK_ReadUserData_Binary = GetDelegate<DCreater.ICE_IPCSDK_ReadUserData_Binary>(nameof(DCreater.ICE_IPCSDK_ReadUserData_Binary));
            _ICE_IPCSDK_GetIPAddr = GetDelegate<DCreater.ICE_IPCSDK_GetIPAddr>(nameof(DCreater.ICE_IPCSDK_GetIPAddr));
            _ICE_IPCSDK_SetIPAddr = GetDelegate<DCreater.ICE_IPCSDK_SetIPAddr>(nameof(DCreater.ICE_IPCSDK_SetIPAddr));
            _ICE_IPCSDK_SearchDev = GetDelegate<DCreater.ICE_IPCSDK_SearchDev>(nameof(DCreater.ICE_IPCSDK_SearchDev));
            _ICE_IPCSDK_LogConfig = GetDelegate<DCreater.ICE_IPCSDK_LogConfig>(nameof(DCreater.ICE_IPCSDK_LogConfig));
            _ICE_IPCSDK_Broadcast = GetDelegate<DCreater.ICE_IPCSDK_Broadcast>(nameof(DCreater.ICE_IPCSDK_Broadcast));
            _ICE_IPCSDK_BroadcastGroup = GetDelegate<DCreater.ICE_IPCSDK_BroadcastGroup>(nameof(DCreater.ICE_IPCSDK_BroadcastGroup));
            _ICE_IPCSDK_SetCity = GetDelegate<DCreater.ICE_IPCSDK_SetCity>(nameof(DCreater.ICE_IPCSDK_SetCity));
            _ICE_IPCSDK_VBR_CompareFeat = GetDelegate<DCreater.ICE_IPCSDK_VBR_CompareFeat>(nameof(DCreater.ICE_IPCSDK_VBR_CompareFeat));
            _ICE_IPCSDK_SetLoop = GetDelegate<DCreater.ICE_IPCSDK_SetLoop>(nameof(DCreater.ICE_IPCSDK_SetLoop));
            _ICE_IPCSDK_GetLoop = GetDelegate<DCreater.ICE_IPCSDK_GetLoop>(nameof(DCreater.ICE_IPCSDK_GetLoop));
            _ICE_IPCSDK_SetTriggerMode = GetDelegate<DCreater.ICE_IPCSDK_SetTriggerMode>(nameof(DCreater.ICE_IPCSDK_SetTriggerMode));
            _ICE_IPCSDK_GetTriggerMode = GetDelegate<DCreater.ICE_IPCSDK_GetTriggerMode>(nameof(DCreater.ICE_IPCSDK_GetTriggerMode));
            _ICE_IPCSDK_GetCameraInfo = GetDelegate<DCreater.ICE_IPCSDK_GetCameraInfo>(nameof(DCreater.ICE_IPCSDK_GetCameraInfo));
            _ICE_IPCSDK_GetUARTCfg = GetDelegate<DCreater.ICE_IPCSDK_GetUARTCfg>(nameof(DCreater.ICE_IPCSDK_GetUARTCfg));
            _ICE_IPCSDK_SetUARTCfg = GetDelegate<DCreater.ICE_IPCSDK_SetUARTCfg>(nameof(DCreater.ICE_IPCSDK_SetUARTCfg));
            _ICE_IPCSDK_GetIOState = GetDelegate<DCreater.ICE_IPCSDK_GetIOState>(nameof(DCreater.ICE_IPCSDK_GetIOState));
            _ICE_IPCSDK_getOfflineVehicleInfo = GetDelegate<DCreater.ICE_IPCSDK_getOfflineVehicleInfo>(nameof(DCreater.ICE_IPCSDK_getOfflineVehicleInfo));
            _ICE_IPCSDK_getPayInfo = GetDelegate<DCreater.ICE_IPCSDK_getPayInfo>(nameof(DCreater.ICE_IPCSDK_getPayInfo));
            _ICE_IPCSDK_SetIOEventCallBack = GetDelegate<DCreater.ICE_IPCSDK_SetIOEventCallBack>(nameof(DCreater.ICE_IPCSDK_SetIOEventCallBack));
            _ICE_IPCSDK_SetVehicleBrand = GetDelegate<DCreater.ICE_IPCSDK_SetVehicleBrand>(nameof(DCreater.ICE_IPCSDK_SetVehicleBrand));
            _ICE_IPCSDK_GetVehicleBrand = GetDelegate<DCreater.ICE_IPCSDK_GetVehicleBrand>(nameof(DCreater.ICE_IPCSDK_GetVehicleBrand));
            _ICE_IPCSDK_SetLedCreen_Config = GetDelegate<DCreater.ICE_IPCSDK_SetLedCreen_Config>(nameof(DCreater.ICE_IPCSDK_SetLedCreen_Config));
            _ICE_IPCSDK_GetLedCreen_Config = GetDelegate<DCreater.ICE_IPCSDK_GetLedCreen_Config>(nameof(DCreater.ICE_IPCSDK_GetLedCreen_Config));
            _ICE_IPCSDK_SetLicense = GetDelegate<DCreater.ICE_IPCSDK_SetLicense>(nameof(DCreater.ICE_IPCSDK_SetLicense));
            _ICE_IPCSDK_CheckLicense = GetDelegate<DCreater.ICE_IPCSDK_CheckLicense>(nameof(DCreater.ICE_IPCSDK_CheckLicense));
            _ICE_IPCSDK_EnableEnc = GetDelegate<DCreater.ICE_IPCSDK_EnableEnc>(nameof(DCreater.ICE_IPCSDK_EnableEnc));
            _ICE_IPCSDK_ModifyEncPwd = GetDelegate<DCreater.ICE_IPCSDK_ModifyEncPwd>(nameof(DCreater.ICE_IPCSDK_ModifyEncPwd));
            _ICE_IPCSDK_SetDecPwd = GetDelegate<DCreater.ICE_IPCSDK_SetDecPwd>(nameof(DCreater.ICE_IPCSDK_SetDecPwd));
            _ICE_IPCSDK_BroadcastWav = GetDelegate<DCreater.ICE_IPCSDK_BroadcastWav>(nameof(DCreater.ICE_IPCSDK_BroadcastWav));
            _ICE_IPCSDK_UpdateWhiteListBatch = GetDelegate<DCreater.ICE_IPCSDK_UpdateWhiteListBatch>(nameof(DCreater.ICE_IPCSDK_UpdateWhiteListBatch));
            _ICE_IPCSDK_GetSnapOsdCfg = GetDelegate<DCreater.ICE_IPCSDK_GetSnapOsdCfg>(nameof(DCreater.ICE_IPCSDK_GetSnapOsdCfg));
            _ICE_IPCSDK_SetSnapOsdCfg = GetDelegate<DCreater.ICE_IPCSDK_SetSnapOsdCfg>(nameof(DCreater.ICE_IPCSDK_SetSnapOsdCfg));
        }
        public override string GetFileFullName()
        {
            return Path.GetFullPath(Environment.Is64BitProcess ? IceIpcSdk.DllFileNameX64 : IceIpcSdk.DllFileNameX64);
        }
        #region // 显示实现接口
        uint IIceIpcSdkProxy.ICE_IPCSDK_BeginTalk(IntPtr hSDK) => _ICE_IPCSDK_BeginTalk.Invoke(hSDK);
        uint IIceIpcSdkProxy.ICE_IPCSDK_Broadcast(IntPtr hSDK, ushort nIndex) => _ICE_IPCSDK_Broadcast.Invoke(hSDK, nIndex);
        uint IIceIpcSdkProxy.ICE_IPCSDK_BroadcastGroup(IntPtr hSDK, string pcIndex) => _ICE_IPCSDK_BroadcastGroup.Invoke(hSDK, pcIndex);
        uint IIceIpcSdkProxy.ICE_IPCSDK_BroadcastWav(IntPtr hSDK, byte[] pcData, uint u32Len) => _ICE_IPCSDK_BroadcastWav.Invoke(hSDK, pcData, u32Len);
        uint IIceIpcSdkProxy.ICE_IPCSDK_Capture(IntPtr hSDK, byte[] pcPicData, uint u32PicSize, ref uint pu32PicLen) => _ICE_IPCSDK_Capture.Invoke(hSDK, pcPicData, u32PicSize, ref pu32PicLen);
        uint IIceIpcSdkProxy.ICE_IPCSDK_CheckLicense(IntPtr hSDK, byte[] license) => _ICE_IPCSDK_CheckLicense.Invoke(hSDK, license);
        void IIceIpcSdkProxy.ICE_IPCSDK_Close(IntPtr hSDK) => _ICE_IPCSDK_Close.Invoke(hSDK);
        uint IIceIpcSdkProxy.ICE_IPCSDK_ControlAlarmOut(IntPtr hSDK, uint u32Index) => _ICE_IPCSDK_ControlAlarmOut.Invoke(hSDK, u32Index);
        uint IIceIpcSdkProxy.ICE_IPCSDK_EnableEnc(IntPtr hSDK, uint u32EncId, byte[] szPwd) => _ICE_IPCSDK_EnableEnc.Invoke(hSDK, u32EncId, szPwd);
        void IIceIpcSdkProxy.ICE_IPCSDK_EndTalk(IntPtr hSDK) => _ICE_IPCSDK_EndTalk.Invoke(hSDK);
        void IIceIpcSdkProxy.ICE_IPCSDK_Fini() => _ICE_IPCSDK_Fini.Invoke();
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetAlarmOutConfig(IntPtr hSDK, uint u32Index, ref uint pu32IdleState, ref uint pu32DelayTime, ref uint pu32Reserve) => _ICE_IPCSDK_GetAlarmOutConfig.Invoke(hSDK, u32Index, ref pu32IdleState, ref pu32DelayTime, ref pu32Reserve);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetCameraInfo(IntPtr hSDK, ref ICE_CameraInfo pstCameraInfo) => _ICE_IPCSDK_GetCameraInfo.Invoke(hSDK, ref pstCameraInfo);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetDevID(IntPtr hSDK, StringBuilder szDevID) => _ICE_IPCSDK_GetDevID.Invoke(hSDK, szDevID);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetIOState(IntPtr hSDK, uint u32Index, ref uint pu32IOState, ref uint pu32Reserve1, ref uint pu32Reserve2) => _ICE_IPCSDK_GetIOState.Invoke(hSDK, u32Index, ref pu32IOState, ref pu32Reserve1, ref pu32Reserve2);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetIPAddr(IntPtr hSDK, ref uint pu32IP, ref uint pu32Mask, ref uint pu32Gateway) => _ICE_IPCSDK_GetIPAddr.Invoke(hSDK, ref pu32IP, ref pu32Mask, ref pu32Gateway);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetLedCreen_Config(IntPtr hSDK, ref ICE_OFFLINE_LED_CONFIG ledConfig) => _ICE_IPCSDK_GetLedCreen_Config.Invoke(hSDK, ref ledConfig);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetLoop(IntPtr hSDK, ref uint nLeft, ref uint nBottom, ref uint nRight, ref uint nTop, uint nWidth, uint nHeight) => _ICE_IPCSDK_GetLoop.Invoke(hSDK, ref nLeft, ref nBottom, ref nRight, ref nTop, nWidth, nHeight);
        uint IIceIpcSdkProxy.ICE_IPCSDK_getOfflineVehicleInfo(IntPtr hSDK, byte[] pcVehicleInfo, uint u32InfoSize, ref uint pu32InfoLen) => _ICE_IPCSDK_getOfflineVehicleInfo.Invoke(hSDK, pcVehicleInfo, u32InfoSize, ref pu32InfoLen);
        uint IIceIpcSdkProxy.ICE_IPCSDK_getPayInfo(IntPtr hSDK, byte[] pcPayInfo, uint u32InfoSize, ref uint pu32InfoLen) => _ICE_IPCSDK_getPayInfo.Invoke(hSDK, pcPayInfo, u32InfoSize, ref pu32InfoLen);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetSnapOsdCfg(IntPtr hSDK, ref T_SnapOsdCfg pstParam) => _ICE_IPCSDK_GetSnapOsdCfg.Invoke(hSDK, ref pstParam);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetStatus(IntPtr hSDK) => _ICE_IPCSDK_GetStatus.Invoke(hSDK);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetTriggerMode(IntPtr hSDK, ref uint pu32TriggerMode) => _ICE_IPCSDK_GetTriggerMode.Invoke(hSDK, ref pu32TriggerMode);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetUARTCfg(IntPtr hSDK, ref ICE_UART_PARAM pstUARTCfg) => _ICE_IPCSDK_GetUARTCfg.Invoke(hSDK, ref pstUARTCfg);
        uint IIceIpcSdkProxy.ICE_IPCSDK_GetVehicleBrand(IntPtr hSDK, ref int s32FilterByPlate, ref int s32EnableNoPlateVehicleBrand, ref int s32EnableVehicleBrand) => _ICE_IPCSDK_GetVehicleBrand.Invoke(hSDK, ref s32FilterByPlate, ref s32EnableNoPlateVehicleBrand, ref s32EnableVehicleBrand);
        void IIceIpcSdkProxy.ICE_IPCSDK_Init() => _ICE_IPCSDK_Init.Invoke();
        void IIceIpcSdkProxy.ICE_IPCSDK_LogConfig(int openLog, string logPath) => _ICE_IPCSDK_LogConfig.Invoke(openLog, logPath);
        uint IIceIpcSdkProxy.ICE_IPCSDK_ModifyEncPwd(IntPtr hSDK, byte[] szOldPwd, byte[] szNewPwd) => _ICE_IPCSDK_ModifyEncPwd.Invoke(hSDK, szOldPwd, szNewPwd);
        IntPtr IIceIpcSdkProxy.ICE_IPCSDK_Open(string pcIP, byte u8OverTCP, ushort u16RTSPPort, ushort u16ICEPort, ushort u16OnvifPort, byte u8MainStream, uint pfOnStream, IntPtr pvStreamParam, uint pfOnFrame, IntPtr pvFrameParam) => _ICE_IPCSDK_Open.Invoke(pcIP, u8OverTCP, u16RTSPPort, u16ICEPort, u16OnvifPort, u8MainStream, pfOnStream, pvStreamParam, pfOnFrame, pvFrameParam);
        IntPtr IIceIpcSdkProxy.ICE_IPCSDK_OpenDevice(string pcIP) => _ICE_IPCSDK_OpenDevice.Invoke(pcIP);
        IntPtr IIceIpcSdkProxy.ICE_IPCSDK_OpenDevice_Passwd(string pcIP, string pcPasswd) => _ICE_IPCSDK_OpenDevice_Passwd.Invoke(pcIP, pcPasswd);
        uint IIceIpcSdkProxy.ICE_IPCSDK_OpenGate(IntPtr hSDK) => _ICE_IPCSDK_OpenGate.Invoke(hSDK);
        IntPtr IIceIpcSdkProxy.ICE_IPCSDK_OpenPreview(string pcIP, byte u8OverTCP, byte u8MainStream, uint hWnd, ICE_IPCSDK_OnPlate pfOnPlate, IntPtr pvPlateParam) => _ICE_IPCSDK_OpenPreview.Invoke(pcIP, u8OverTCP, u8MainStream, hWnd, pfOnPlate, pvPlateParam);
        IntPtr IIceIpcSdkProxy.ICE_IPCSDK_OpenPreview_Passwd(string pcIP, string pcPasswd, byte u8OverTCP, byte u8MainStream, uint hWnd, ICE_IPCSDK_OnPlate pfOnPlate, IntPtr pvPlateParam) => _ICE_IPCSDK_OpenPreview_Passwd.Invoke(pcIP, pcPasswd, u8OverTCP, u8MainStream, hWnd, pfOnPlate, pvPlateParam);
        IntPtr IIceIpcSdkProxy.ICE_IPCSDK_Open_Passwd(string pcIP, string pcPasswd, byte u8OverTCP, ushort u16RTSPPort, ushort u16ICEPort, ushort u16OnvifPort, byte u8MainStream, uint pfOnStream, IntPtr pvStreamParam, uint pfOnFrame, IntPtr pvFrameParam) => _ICE_IPCSDK_Open_Passwd.Invoke(pcIP, pcPasswd, u8OverTCP, u16RTSPPort, u16ICEPort, u16OnvifPort, u8MainStream, pfOnStream, pvStreamParam, pfOnFrame, pvFrameParam);
        uint IIceIpcSdkProxy.ICE_IPCSDK_ReadUserData(IntPtr hSDK, byte[] pcData, int nSize) => _ICE_IPCSDK_ReadUserData.Invoke(hSDK, pcData, nSize);
        uint IIceIpcSdkProxy.ICE_IPCSDK_ReadUserData_Binary(IntPtr hSDK, byte[] pcData, uint nSize, uint nOffset, uint nLen) => _ICE_IPCSDK_ReadUserData_Binary.Invoke(hSDK, pcData, nSize, nOffset, nLen);
        uint IIceIpcSdkProxy.ICE_IPCSDK_Reboot(IntPtr hSDK) => _ICE_IPCSDK_Reboot.Invoke(hSDK);
        void IIceIpcSdkProxy.ICE_IPCSDK_SearchDev(StringBuilder szDevs) => _ICE_IPCSDK_SearchDev.Invoke(szDevs);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetAlarmOutConfig(IntPtr hSDK, uint u32Index, uint u32IdleState, uint u32DelayTime, uint u32Reserve) => _ICE_IPCSDK_SetAlarmOutConfig.Invoke(hSDK, u32Index, u32IdleState, u32DelayTime, u32Reserve);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetCity(IntPtr hSDK, uint u32Index) => _ICE_IPCSDK_SetCity.Invoke(hSDK, u32Index);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetDecPwd(IntPtr hSDK, byte[] szPwd) => _ICE_IPCSDK_SetDecPwd.Invoke(hSDK, szPwd);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetDeviceEventCallBack(IntPtr hSDK, ICE_IPCSDK_OnDeviceEvent pfOnDeviceEvent, IntPtr pvDeviceEventParam) => _ICE_IPCSDK_SetDeviceEventCallBack.Invoke(hSDK, pfOnDeviceEvent, pvDeviceEventParam);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetFrameCallback(IntPtr hSDK, ICE_IPCSDK_OnFrame_Planar pfOnFrame, IntPtr pvParam) => _ICE_IPCSDK_SetFrameCallback.Invoke(hSDK, pfOnFrame, pvParam);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetIOEventCallBack(IntPtr hSDK, ICE_IPCSDK_OnIOEvent pfOnIOEvent, IntPtr pvIOEventParam) => _ICE_IPCSDK_SetIOEventCallBack.Invoke(hSDK, pfOnIOEvent, pvIOEventParam);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetIPAddr(IntPtr hSDK, uint u32IP, uint u32Mask, uint u32Gateway) => _ICE_IPCSDK_SetIPAddr.Invoke(hSDK, u32IP, u32Mask, u32Gateway);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetLedCreen_Config(IntPtr hSDK, ref ICE_OFFLINE_LED_CONFIG ledConfig) => _ICE_IPCSDK_SetLedCreen_Config.Invoke(hSDK, ref ledConfig);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetLicense(IntPtr hSDK, byte[] old_lics, byte[] new_lics) => _ICE_IPCSDK_SetLicense.Invoke(hSDK, old_lics, new_lics);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetLoop(IntPtr hSDK, uint nLeft, uint nBottom, uint nRight, uint nTop, uint nWidth, uint nHeight) => _ICE_IPCSDK_SetLoop.Invoke(hSDK, nLeft, nBottom, nRight, nTop, nWidth, nHeight);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetOSDCfg(IntPtr hSDK, ref ICE_OSDAttr_S pstOSDAttr) => _ICE_IPCSDK_SetOSDCfg.Invoke(hSDK, ref pstOSDAttr);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetPastPlateCallBack(IntPtr hSDK, ICE_IPCSDK_OnPastPlate pfOnPastPlate, IntPtr pvPastPlateParam) => _ICE_IPCSDK_SetPastPlateCallBack.Invoke(hSDK, pfOnPastPlate, pvPastPlateParam);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetPlateCallback(IntPtr hSDK, ICE_IPCSDK_OnPlate pfOnPlate, IntPtr pvParam) => _ICE_IPCSDK_SetPlateCallback.Invoke(hSDK, pfOnPlate, pvParam);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetSerialPortCallBack(IntPtr hSDK, ICE_IPCSDK_OnSerialPort pfOnSerialPort, IntPtr pvSerialPortParam) => _ICE_IPCSDK_SetSerialPortCallBack.Invoke(hSDK, pfOnSerialPort, pvSerialPortParam);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetSerialPortCallBack_RS232(IntPtr hSDK, ICE_IPCSDK_OnSerialPort_RS232 pfOnSerialPort, IntPtr pvSerialPortParam) => _ICE_IPCSDK_SetSerialPortCallBack_RS232.Invoke(hSDK, pfOnSerialPort, pvSerialPortParam);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetSnapOsdCfg(IntPtr hSDK, ref T_SnapOsdCfg pstParam) => _ICE_IPCSDK_SetSnapOsdCfg.Invoke(hSDK, ref pstParam);
        void IIceIpcSdkProxy.ICE_IPCSDK_SetTalkEventCallBack(IntPtr hSDK, ICE_IPCSDK_OnTalkEvent pfOnTalkEvent, IntPtr pvTalkEventParam) => _ICE_IPCSDK_SetTalkEventCallBack.Invoke(hSDK, pfOnTalkEvent, pvTalkEventParam);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetTriggerMode(IntPtr hSDK, uint u32TriggerMode) => _ICE_IPCSDK_SetTriggerMode.Invoke(hSDK, u32TriggerMode);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetUARTCfg(IntPtr hSDK, ref ICE_UART_PARAM pstUARTCfg) => _ICE_IPCSDK_SetUARTCfg.Invoke(hSDK, ref pstUARTCfg);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SetVehicleBrand(IntPtr hSDK, int s32FilterByPlate, int s32EnableNoPlateVehicleBrand, int s32EnableVehicleBrand) => _ICE_IPCSDK_SetVehicleBrand.Invoke(hSDK, s32FilterByPlate, s32EnableNoPlateVehicleBrand, s32EnableVehicleBrand);
        uint IIceIpcSdkProxy.ICE_IPCSDK_StartRecord(IntPtr hSDK, string pcFileName) => _ICE_IPCSDK_StartRecord.Invoke(hSDK, pcFileName);
        uint IIceIpcSdkProxy.ICE_IPCSDK_StartStream(IntPtr hSDK, byte u8MainStream, uint hWnd) => _ICE_IPCSDK_StartStream.Invoke(hSDK, u8MainStream, hWnd);
        void IIceIpcSdkProxy.ICE_IPCSDK_StopRecord(IntPtr hSDK) => _ICE_IPCSDK_StopRecord.Invoke(hSDK);
        void IIceIpcSdkProxy.ICE_IPCSDK_StopStream(IntPtr hSDK) => _ICE_IPCSDK_StopStream.Invoke(hSDK);
        uint IIceIpcSdkProxy.ICE_IPCSDK_SyncTime(IntPtr hSDK, ushort u16Year, byte u8Month, byte u8Day, byte u8Hour, byte u8Min, byte u8Sec) => _ICE_IPCSDK_SyncTime.Invoke(hSDK, u16Year, u8Month, u8Day, u8Hour, u8Min, u8Sec);
        uint IIceIpcSdkProxy.ICE_IPCSDK_TransSerialPort(IntPtr hSDK, byte[] pcData, uint u32Len) => _ICE_IPCSDK_TransSerialPort.Invoke(hSDK, pcData, u32Len);
        uint IIceIpcSdkProxy.ICE_IPCSDK_TransSerialPort_RS232(IntPtr hSDK, byte[] pcData, uint u32Len) => _ICE_IPCSDK_TransSerialPort_RS232.Invoke(hSDK, pcData, u32Len);
        uint IIceIpcSdkProxy.ICE_IPCSDK_Trigger(IntPtr hSDK, StringBuilder pcNumber, StringBuilder pcColor, byte[] pcPicData, uint u32PicSize, ref uint pu32PicLen) => _ICE_IPCSDK_Trigger.Invoke(hSDK, pcNumber, pcColor, pcPicData, u32PicSize, ref pu32PicLen);
        uint IIceIpcSdkProxy.ICE_IPCSDK_TriggerExt(IntPtr hSDK) => _ICE_IPCSDK_TriggerExt.Invoke(hSDK);
        uint IIceIpcSdkProxy.ICE_IPCSDK_UpdateWhiteListBatch(IntPtr hSDK, string szFilePath, int s32Type) => _ICE_IPCSDK_UpdateWhiteListBatch.Invoke(hSDK, szFilePath, s32Type);
        float IIceIpcSdkProxy.ICE_IPCSDK_VBR_CompareFeat(float[] _pfResFeat1, uint _iFeat1Len, float[] _pfReaFeat2, uint _iFeat2Len) => _ICE_IPCSDK_VBR_CompareFeat.Invoke(_pfResFeat1, _iFeat1Len, _pfReaFeat2, _iFeat2Len);
        uint IIceIpcSdkProxy.ICE_IPCSDK_WriteUserData(IntPtr hSDK, string pcData) => _ICE_IPCSDK_WriteUserData.Invoke(hSDK, pcData);
        uint IIceIpcSdkProxy.ICE_IPCSDK_WriteUserData_Binary(IntPtr hSDK, string pcData, uint nOffset, uint nLen) => _ICE_IPCSDK_WriteUserData_Binary.Invoke(hSDK, pcData, nOffset, nLen);
        #endregion
    }
}
